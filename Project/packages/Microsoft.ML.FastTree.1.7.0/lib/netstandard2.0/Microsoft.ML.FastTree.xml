<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ML.FastTree</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ML.Trainers.FastTree.BinFinder">
            <summary>
            A class that bins vectors of doubles into a specified number of equal mass bins.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BinFinder.FindDistinctCounts(Microsoft.ML.Data.VBuffer{System.Double}@,System.Double[],System.Double[],System.Int32[])">
            <summary>
            Finds the distinct values in the <paramref name="values"/>. You must have
            pre-allocated <paramref name="distinctValues"/> and <paramref name="counts"/> yourself.
            The scheme is destructive, because it modifies the arrays within <paramref name="values"/>.
            </summary>
            <param name="values">The values we are binning</param>
            <param name="valueBuffer">A buffer space to work over the values, so the original
            values aren't modified.</param>
            <param name="distinctValues">This working array will be filled with a sorted list of the
            distinct values detected within <paramref name="values"/></param>
            <param name="counts">This working array will be filled with a sorted list of the distinct
            values detected within <paramref name="values"/></param>
            <returns>The logical length of both <paramref name="distinctValues"/> and
            <paramref name="counts"/></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BinFinder.FindBinsFromDistinctCounts(System.Double[],System.Int32[],System.Int32,System.Int32,System.Double[]@,System.Int32@)">
            <summary>
            Finds the bins.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BinFinder.IsTrivial(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Check to see if we can "trivialize" this feature, because it would
            be impossible to split with the indicated minimum examples per leaf.
            </summary>
            <param name="distinctCounts">The counts of each distinct bin value</param>
            <param name="numDistinct">The logical length of <paramref name="distinctCounts"/></param>
            <param name="minPerLeaf">The minimum examples per leaf we are filtering on</param>
            <returns>Whether this feature is trivial, that is, it would be impossible to split on it</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BinFinder.FindBins(Microsoft.ML.Data.VBuffer{System.Double}@,System.Int32,System.Int32,System.Double[]@)">
            <summary>
            Finds the bins.
            </summary>
            <param name="values">The values we are binning</param>
            <param name="maxBins">The maximum number of bins to find</param>
            <param name="minPerLeaf">The minimum number of documents per leaf</param>
            <param name="binUpperBounds">The calculated upper bound of each bin</param>
            <returns>Whether finding the bins is successful. If there were NaN values in <paramref name="values"/>,
            this will return false and the output arrays will be <c>null</c>. Otherwise it will return true.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase`3.BsrMaxTreeOutput">
            <summary>
            Retrieves max tree output if best regression step option is active or returns negative value otherwise.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dataset">
            <summary>
            A dataset of features.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.#ctor(Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton,Microsoft.ML.Trainers.FastTree.FeatureFlockBase[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset"/> class.
            </summary>
            <param name="datasetSkeleton">The dataset skeleton corresponding to the features</param>
            <param name="flocks">An array of feature flocks</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.MapFeatureToFlockAndSubFeature(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Maps a global feature index, to the index of the particular flock, as well as the
            index of the subfeature within that flock.
            </summary>
            <param name="feature">The index of the feature at the dataset level</param>
            <param name="flock">The index of the flock containing this feature</param>
            <param name="subfeature">The index of the feature within the flock</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.FlockToFirstFeature(System.Int32)">
            <summary>
            Given a flock index, returns the index of the first feature in this flock.
            </summary>
            <param name="flock">Index of the flock</param>
            <returns>The index of the first feature that belongs to this flock</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.Skeleton">
            <summary>
            Gets the dataset skeleton.
            </summary>
            <value>The skeleton.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.Ratings">
            <summary>
            Gets the labels.
            </summary>
            <value>The labels.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.Boundaries">
            <summary>
            Gets the boundaries.
            </summary>
            <value>The boundaries.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.QueryIds">
            <summary>
            Gets the query ids.
            </summary>
            <value>The query ids.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.DocIds">
            <summary>
            Gets the doc ids.
            </summary>
            <value>The doc ids.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.MaxDcg">
            <summary>
            Gets the max DCG.
            </summary>
            <value>The max DCG.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.MaxDocsPerQuery">
            <summary>
            Gets the max number of docs per any query.
            </summary>
            <value>The max number of docs per any query.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.NumDocs">
            <summary>
            Gets the number of docs in the entire dataset.
            </summary>
            <value>The number of docs in the entire dataset.</value>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.NumDocsInQuery(System.Int32)">
            <summary>
            Nums the docs in a given query.
            </summary>
            <param name="queryIndex">Index of the query.</param>
            <returns>the number of docs in the query</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.NumQueries">
            <summary>
            Gets the number of queries in the dataset.
            </summary>
            <value>The number of queries in the dataset.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.DocToQuery">
            <summary>
            Returns the document to query
            </summary>
            <returns>The associated document</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.SampleWeights">
            <summary>
            Returns the query weights object in underlying dataset skeleton
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.Flocks">
            <summary>
            Gets the array of features.
            </summary>
            <value>The array of features.</value>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.NumFlocks">
            <summary>
            The number of feature flocks.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.NumFeatures">
            <summary>
            The number of features.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.Split(System.Double[],System.Int32,System.Boolean)">
            <summary>
            Split a dataset by queries into disjoint parts
            </summary>
            <param name="fraction">an array of the fractional size of each part, must sum to 1.0</param>
            <param name="randomSeed">a seed that deterministically defines the split</param>
            <param name="destroyThisDataset">do you want the features of this dataset to be destroyed on-the-fly as the new datasets are created</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.GetSubDataset(System.Int32[],System.Boolean)">
            <summary>
            Creates a new Dataset, which includes a subset of the docs in this Dataset.
            </summary>
            <param name="docIndices">A sorted array of doc indices</param>
            <param name="destroyThisDataset">Determines if this Dataset is deleted on the fly as the
            new one is created (this reduces peak memory)</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.GetFeatureBinRowwiseIndexer(System.Boolean[])">
            <summary>
            Returns a row-wise forward indexer across multiple features in the dataset.
            </summary>
            <param name="activeFeatures">Boolean array indicating active features, or null to
            indicate all features should be used</param>
            <returns>Row forward indexer</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton">
            <summary>
            A class that contains all of the feature-independent data of the dataset
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.#ctor(System.Int16[],System.Int32[],System.UInt64[],System.UInt64[],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton"/> class.
            </summary>
            <param name="ratings"></param>
            <param name="boundaries">The boundaries.</param>
            <param name="queryIds">The query ids.</param>
            <param name="docIds">The doc ids.</param>
            <param name="actualTargets"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.#ctor(System.Int16[],System.Int32[],System.UInt64[],System.UInt64[],System.Double[][],System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton"/> class.
            </summary>
            <param name="ratings">The ratings.</param>
            <param name="boundaries">The boundaries.</param>
            <param name="queryIds">The query ids.</param>
            <param name="docIds">The doc ids.</param>
            <param name="maxDcg">The vector of maxDCG.</param>
            <param name="actualTargets"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.CheckConsistency">
            <summary>
            Checks the consistency of the DatasetSkeleton
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.Concat(Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton[])">
            <summary>
            Takes an array of DatasetSkeleton objects and concatenates them into one big DatasetSkeleton
            </summary>
            <param name="parts">An array of DatasetSkeletons</param>
            <returns>A concatenated DatasetSkeleton</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.MaxDcgRange(System.Int16[],System.Int32[],System.Int32)">
            <summary>
            Calculates natural-based max DCG at all truncations from 1 to trunc
            </summary>
            <param name="labels">vector of labels</param>
            <param name="boundaries">vector of query boundaries</param>
            <param name="trunc">max truncation</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.SetConcatenatedAuxiliaryData(Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton[],Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton)">
            <summary>
            Given the auxiliary data in a bunch of parts, set the concatenated dataset appropriately.
            </summary>
            <param name="parts">The individual parts of the dataset</param>
            <param name="concat">The concatenated version of this dataset</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.SetData(System.String,System.Array,System.Boolean)">
            <summary>
            Sets some named query or document level auxiliary data.
            </summary>
            <param name="name">The name of the parameter</param>
            <param name="array"></param>
            <param name="queryLevel"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton.GetData``1(System.String)">
            <summary>
            Retrieves some auxiliary data previously set to this skeleton.
            </summary>
            <typeparam name="T">The type of the array, which should match the type passed in</typeparam>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dataset.RowForwardIndexer">
            <summary>
            Structure allowing forward indexing by row, across multiple features in the dataset.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Dataset.RowForwardIndexer.Row.Item(System.Int32)">
            <summary>
            Indexes the value of a feature for this row.
            </summary>
            <param name="featureIndex">The feature index</param>
            <returns>The binned valued of a feature for this row</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dataset.RowForwardIndexer.#ctor(Microsoft.ML.Trainers.FastTree.Dataset,System.Boolean[])">
            <summary>
            Constructor.
            </summary>
            <param name="dataset">The dataset to create the indexer over</param>
            <param name="active">Either null to indicate all columns should be active, or
            a boolean array of length equal to the number of features that should be active</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DatasetUtils">
            <summary>
            Loads training/validation/test sets from file
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DatasetUtils.CreateFeatureFromQueryId(Microsoft.ML.Trainers.FastTree.Dataset.DatasetSkeleton)">
            <summary>
            Attempts to create a feature from a ulong array. The intent
            is that this will handle query ID.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DenseIntArray">
            <summary>
            Abstract class implementing some common functions of the dense int array types.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DenseIntArray.Item(System.Int32)">
            <summary>
            Gets or sets the value at this index.
            Value must be in legal range 0...((2^<see cref="P:Microsoft.ML.Trainers.FastTree.IntArray.BitsPerItem"/>)-1).
            </summary>
            <param name="index">Index of value to get or set</param>
            <returns>The value at this index</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DenseIntArray.Clone(System.Int32[])">
            <summary>
            Clone an IntArray containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned IntArray  </param>
            <returns> The cloned IntArray </returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense0BitIntArray">
            <summary>
            A "null" feature representing only zeros.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense0BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense0BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense10BitIntArray">
            <summary>
            A class to represent features using 10 bits.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense10BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense10BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense8BitIntArray">
            <summary>
            A class to represent features using 8 bits
            </summary>
            <remarks>Represents values -1...(2^s-2)
            0-bit array only represents the value -1</remarks>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense8BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense8BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense4BitIntArray">
            <summary>
            A class to represent features using 4 bits.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.Dense4BitIntArray._data">
            <summary>
            For a given byte, the high 4 bits is the first value, the low 4 bits is the next value.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense4BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense4BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense16BitIntArray">
            <summary>
            A class to represent features using 16 bits.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense16BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense16BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Dense32BitIntArray">
            <summary>
            A class to represent features using 32 bits.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense32BitIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Dense32BitIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Feature">
            <summary>
            Represents a binned feature
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Feature.FeatureType">
            <summary>
            The type of the feature. This is serialized as part of the Bing extraction BIN file,
            so it should remain binary compatible from version to version.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Feature.Length">
            <summary>
            Returns the number of entires (documents) in the feature
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Feature.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Feature.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.Feature.Bins">
            <summary>
            Gets the compactIntArray of bin values.
            </summary>
            <value>The bin values.</value>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.#ctor(Microsoft.ML.Trainers.FastTree.IntArray,System.UInt32[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Trainers.FastTree.Feature"/> class.
            </summary>
            <param name="bins">The bins.</param>
            <param name="valueMap"></param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.#ctor(System.String,System.Int32)">
            <summary>
            Constructs an empty (all zero) feature
            </summary>
            <param name="name"></param>
            <param name="length"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TsvFeature.ValueMap">
            <summary>
            Gets the value that represents each bin
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.Clone(System.Int32[])">
            <summary>
            Clone a TSVFeature containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned TSVFeature  </param>
            <returns> The cloned TSVFeature </returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TsvFeature.Concat(Microsoft.ML.Trainers.FastTree.TsvFeature[])">
            <summary>
            Concatenates an array of features into one long feature
            </summary>
            <param name="parts">An array of features</param>
            <returns>A concatenated feature</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.PerBinStats">
            <summary>
            Holds statistics per bin value for a feature. These are yielded by <see cref="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.GetBinStats(System.Int32)"/>
            to indicate after a <see cref="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.Sumup(System.Int32,System.Boolean[],System.Int32,System.Double,System.Double,System.Double[],System.Double[],System.Int32[])"/> call over a subset of the dataset. These statistics
            are then used in <see cref="T:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner"/> to find splitting on which bin will yield the
            best least squares solution
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.PerBinStats.SumTargets">
            <summary>Sum of all target values in a partition for the bin.</summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.PerBinStats.SumWeights">
            <summary>Sum of all target weights in a partition. May be 0 if we are not doing weighted training.</summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.PerBinStats.Count">
            <summary>Count of the documents in this partition for the bin.</summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SufficientStatsBase">
             <summary>
             These objects are stateful, reusable objects that enable the collection of sufficient
             stats per feature flock, per node or leaf of a tree, to enable it to find the "best"
             splits.
            
             Each instance of this corresponds to a single flock, but multiple of these will be created
             per flock. Note that feature indices, whenever present, refer to the feature within the
             particular flock the same as they do with <see cref="T:Microsoft.ML.Trainers.FastTree.FeatureFlockBase"/>.
             </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.IsSplittable">
            <summary>
            An array as large as there are count of features in the corresponding flock. Used by
            <see cref="T:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner"/> to indicate whether a particular
            feature has been judged to be potentially splittable or not.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.Sumup(System.Int32,System.Boolean[],System.Int32,System.Double,System.Double,System.Double[],System.Double[],System.Int32[])">
            <summary>
            Performs the accumulation of sufficient statistics for active features within a flock.
            </summary>
            <param name="featureOffset">Offset into <paramref name="active"/> where we should start querying active stats</param>
            <param name="active">The indicator array of whether features are active or not, logically starting for
            this flock at <paramref name="featureOffset"/>, where after this </param>
            <param name="numDocsInLeaf">Minimum documents total in this leaf</param>
            <param name="sumTargets">The sum of the targets for this leaf</param>
            <param name="sumWeights">The sum of the weights for this leaf</param>
            <param name="outputs">The target values, indexed by <paramref name="numDocsInLeaf"/></param>
            <param name="weights"></param>
            <param name="docIndices">The first <paramref name="numDocsInLeaf"/> entries indicate the row indices
            in this leaf, and these row indices are used to </param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.SumupCore(System.Int32,System.Boolean[],System.Int32,System.Double,System.Double,System.Double[],System.Double[],System.Int32[])">
            <summary>
            The core implementation called from <see cref="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.Sumup(System.Int32,System.Boolean[],System.Int32,System.Double,System.Double,System.Double[],System.Double[],System.Int32[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.Subtract(Microsoft.ML.Trainers.FastTree.SufficientStatsBase)">
            <summary>
            Subtracts one sufficient statistics from another. Note that this other
            sufficient statistics object must be over the same feature flock in order
            to be meaningful, as well as have undergone <see cref="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.Sumup(System.Int32,System.Boolean[],System.Int32,System.Double,System.Double,System.Double[],System.Double[],System.Int32[])"/> under
            the same set of active features.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.SizeInBytes">
            <summary>
            An approximation of the size in bytes used by this structure. Used for tracking
            and memory size estimation purposes.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase.CopyFeatureHistogram(System.Int32,Microsoft.ML.Trainers.FastTree.PerBinStats[]@)">
            <summary>
            Get a fullcopy of histogram for one sub feature.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SufficientStatsBase`1">
            <summary>
            Type specific implementation of sufficient stats.
            </summary>
            <typeparam name="TSuffStats">The type of sufficient stats that we will be able to do
            "peer" operations against, like subtract. This will always be the derived class itself.</typeparam>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SufficientStatsBase`1.SubtractCore(`0)">
            <summary>
            Actual core implementation of subtraction. By the time this is called, the
            base class has ensured that the feature flock of this is the same as the
            feature flock in the other.
            </summary>
            <param name="other">The sufficient statistics we are subtracting</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FeatureFlockBase">
             <summary>
             A feature flock is a collection of features, grouped together because storing the
             features and performing the key operations on them in a collection can be done
             more efficiently than if they were stored as separate features.
            
             Since this is a collection of features, feature specific quantities and methods
             will have a feature index parameter. Note that this index is always, for every
             flock, from 0 up to but not including <see cref="F:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.Count"/>. Now,
             in the larger context of a <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset"/> holding many flocks, the
             individual features might have some sort of "dataset-wide" index, but this is
             considered the business of the dataset, not the flocks themselves. See
             <see cref="M:Microsoft.ML.Trainers.FastTree.Dataset.MapFeatureToFlockAndSubFeature(System.Int32,System.Int32@,System.Int32@)"/> to see some details of this
             dataset-wide versus flock-wide feature index.
             </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.Count">
            <summary>
            The number of features contained within this flock.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.Examples">
            <summary>
            The number of training examples represented by the features within this flock.
            This should be the same for all flocks within a dataset.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.Categorical">
            <summary>
            Flock is a categorical feature.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.SizeInBytes">
            <summary>
            An approximation of the size in bytes used by this structure. Used for estimating
            memory usage of the tree learner.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.CreateSufficientStats(System.Boolean)">
            <summary>
            A reusable structure for tracking the sufficient statistics for tree learning
            of the features in this flock.
            </summary>
            <param name="hasWeights">Whether structures related to tracking
            example weights should be allocated</param>
            <returns>A sufficient statistics object</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GetIndexer(System.Int32)">
            <summary>
            Returns a forward indexer for a single feature. This has a default implementation that
            relies on <see cref="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GetFlockIndexer"/>, but base classes may find it beneficial from
            a performance perspective to provide their own implementation.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GetFlockIndexer">
            <summary>
            Returns a forward indexer for all features within the flock.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.BinCount(System.Int32)">
            <summary>
            Given a feature index, return the number of distinct bins there are for that feature.
            This will be the length of <see cref="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.BinUpperBounds(System.Int32)"/> for this feature. This is also
            the upper exclusive limit on the binned value seen for this feature.
            </summary>
            <param name="featureIndex">The index of the feature within the flock</param>
            <returns>The number of distinct bins for that feature within the flock</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.Trust(System.Int32)">
            <summary>
            The multiplier on the gain for any particular feature. This can be used to make
            features appear more or less attractive. The default value should be considered
            to be 1.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.BinUpperBounds(System.Int32)">
            <summary>
            An array of increasing values, forming the boundaries of all the binned values.
            </summary>
            <param name="featureIndex"></param>
            <returns>The bin upper bounds for a feature. This array will have the same
            length as <see cref="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.BinCount(System.Int32)"/>.</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GenericIntArrayForwardIndexer">
            <summary>
            If you need to implement <see cref="M:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GetIndexer(System.Int32)"/> you can use
            <see cref="T:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.GenericIntArrayForwardIndexer"/>. This will be slower than a
            specialized implementation but is at least a useful shim.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.FlockForwardIndexerBase">
            <summary>
            Interface for objects that can index into a flock, but only with a nondecreasing sequence of row
            indices from access to access. It is fine for feature indices to appear in any order.
            A feature group analogy to <see cref="T:Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer"/> but for feature flocks instead of
            <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.FlockForwardIndexerBase.Flock">
            <summary>
            The flock over which this feature flock was built.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FeatureFlockBase.FlockForwardIndexerBase.Item(System.Int32,System.Int32)">
            <summary>
            Gets the element at the given position.
            </summary>
            <param name="featureIndex">The index of the feature within the flock</param>
            <param name="rowIndex">Index of the row to get, should be non-decreasing from any previous
            access on this indexer</param>
            <returns>The value at the index</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1">
            <summary>
            A base class for a feature flock that wraps a single <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/> that contains multiple
            feature values using a concatenation of the non-zero ranges of each feature, and also in some way
            that doing a <see cref="M:Microsoft.ML.Trainers.FastTree.IntArray.Sumup(Microsoft.ML.Trainers.FastTree.SumupInputData,Microsoft.ML.Trainers.FastTree.FeatureHistogram)"/> will accumulate sufficient statistics correctly for all
            except the first (zero) bin.
            </summary>
            <typeparam name="TIntArray">The type of <see>IntArray</see> this implementation wraps</typeparam>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1.#ctor(`0,System.Int32[],System.Double[][],System.Boolean)">
             <summary>
             Constructor for the <see cref="T:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1"/>.
             </summary>
             <param name="bins">The binned version of the features, stored collectively in one
             <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/>, where 0 indicates that all features are in the "cold" bin
             of 0, and a non-zero value indicates one of the features is "hot," where which
             feature is hot and what value it has is indicated by <paramref name="hotFeatureStarts"/>.
             The zero value is "shared" among all features, effectively, and the non-zero values
             are the result of a shifted concatenation of the range of the non-zero values, for
             each feature incorporated in the flock. See the example for more concrete information.
             </param>
             <param name="hotFeatureStarts">The ranges of values of <paramref name="bins"/>
             where features start and stop. This is a non-decreasing array of integers. For
             feature <c>f</c>, the elements at <c>f</c> and <c>f+1</c> indicate the minimum
             and limit of values in <paramref name="bins"/> that indicate that the corresponding
             feature is "hot" starting at a value of 1.</param>
             <param name="binUpperBounds">The bin upper bounds structure</param>
             <param name="categorical"></param>
             <example>
             Imagine we have a six row dataset, with two features, which if stored separately in,
             say, a <see cref="T:Microsoft.ML.Trainers.FastTree.SingletonFeatureFlock"/>, would have bin values as follows.
            
             <c>f0 = { 0, 1, 0, 0, 2, 0}</c>
             <c>f1 = { 0, 0, 1, 0, 0, 1}</c>
            
             These two are a candidate for a <see cref="T:Microsoft.ML.Trainers.FastTree.OneHotFeatureFlock"/>, because they never both
             have a non-zero bin value for any row. Then, in order to represent this in this feature,
             we would pass in this value for the <paramref name="bins"/>:
             <c><paramref name="bins"/> = { 0, 1, 3, 0, 2, 3 }</c>
             and this value for <paramref name="hotFeatureStarts"/>:
             <c><paramref name="hotFeatureStarts"/> = { 1, 3, 4 }</c>
             Note that the range of <paramref name="bins"/> is, aside from the zero, the concatenation
             of the non-zero range of all constituent input features, and where the reconstruction of
             what feature is which can be reconstructed from <paramref name="hotFeatureStarts"/>, which
             for each feature specifies the range in <paramref name="bins"/> corresponding to the
             "logical" bin value for that feature starting from 1.
            
             Note that it would also have been legal for <paramref name="hotFeatureStarts"/> to be
             larger than the actual observed range, for example, it could have been:
             <c><paramref name="hotFeatureStarts"/> = { 1, 5, 8}</c>
             or something. This could happen if binning happened over a different dataset from the data
             being represented right now, for example, but this is a more complex case.
            
             The <paramref name="binUpperBounds"/> would contain the upper bounds for both of these features,
             which would be arrays large enough so that the maximum value of the logical bin for each feature
             in the flock could index it. (So in this example, the first bin upper bound would be at least
             length 3, and the second at least length 2.)
            
             The <paramref name="categorical"/> indicates if the flock is a categorical feature.
             </example>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1.SufficientStats">
            <summary>
            Stores the sufficient statistics for all features within this flock using a single
            histogram, where the range of what accumulated sufficient statistics are relevant
            to what feature can be inferred by <see cref="F:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1.HotFeatureStarts"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1.SufficientStats.Hist">
            <summary>
            Stores the sufficient statistics for all features within this flock using a single
            histogram, where the range of what accumulated sufficient statistics correspond to
            what actual logical feature depends on <see cref="F:Microsoft.ML.Trainers.FastTree.SinglePartitionedIntArrayFlockBase`1.HotFeatureStarts"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FeatureHistogram">
            <summary>
            Class to represent statistics of the feature used by LeastSquaresRegressionTreeLearner
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureHistogram.#ctor(Microsoft.ML.Trainers.FastTree.IntArray,System.Int32,System.Boolean)">
            <summary>
            Make a new FeatureHistogram
            </summary>
            <param name="bins">The bins we will be calculating sumups over</param>
            <param name="numBins">The number of bins, should be at least as large as the number of bins</param>
            <param name="useWeights">Allocates weights array when true</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureHistogram.EstimateMemoryUsedForFeatureHistogram(System.Int32,System.Boolean)">
            <summary>
            This function returns the estimated memory used for a FeatureHistogram object according to given
            number of bins.
            </summary>
            <param name="numBins">number of bins</param>
            <param name="hasWeights">weights array is counted when true</param>
            <returns>estimated size of memory used for a feature histogram object</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeatureHistogram.Subtract(Microsoft.ML.Trainers.FastTree.FeatureHistogram)">
            <summary>
            Subtract from myself the counts of the child histogram
            </summary>
            <param name="child">Another histogram to subtract</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.IntArray">
            <summary>
            An object representing an array of integers
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.IntArray.Length">
            <summary>
            The virtual length of the array
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.IntArray.UseFastTreeNative">
            <summary>
            Bool that checks if we are on x86/x64 so we know if we should use the native code
            or the managed fallbacks.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.NumBitsNeeded(System.Int32)">
            <summary>
            Number of bytes needed to store this number of values
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.New(System.Byte[],System.Int32@)">
            <summary>
            Creates a new int array given a byte representation
            </summary>
            <param name="buffer">the byte array representation of the dense array. The buffer can be larger than needed since the caller might be re-using buffers from a pool</param>
            <param name="position">the position in the byte array</param>
            <returns>the int array object</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.Clone(Microsoft.ML.Trainers.FastTree.IntArrayBits,Microsoft.ML.Trainers.FastTree.IntArrayType)">
            <summary>
            Clones the contents of this IntArray into an new IntArray
            </summary>
            <param name="bitsPerItem">The number of bits per item in the created IntArray</param>
            <param name="type">The type of the new IntArray</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.Clone(System.Int32[])">
            <summary>
            Clone an IntArray containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned IntArray  </param>
            <returns> The cloned IntArray </returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.GetIndexer">
            <summary>
            Gets an indexer into the array
            </summary>
            <returns>An indexer into the array</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IntArray.Compress(System.UInt32[])">
            <summary>
            Finds the most space efficient representation of the feature
            (with slight slack cut for dense features). The behavior of
            this method depends upon the static value <see cref="F:Microsoft.ML.Trainers.FastTree.IntArray.CompatibilityLevel"/>.
            </summary>
            <param name="workarray">Should be non-null if you want it to
            consider segment arrays.</param>
            <returns>Returns a more space efficient version of the array,
            or the item itself if that is impossible, somehow.</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer">
            <summary>
            Interface for objects that can index into an <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/>, but only with a non-decreasing sequence of indices.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer.Item(System.Int32)">
            <summary>
            Gets the element at the given index.
            </summary>
            <param name="index">Index to get</param>
            <returns>The value at the index</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.NHotFeatureFlock">
            <summary>
            This is a feature flock that misuses a property of <see cref="M:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray.Sumup(Microsoft.ML.Trainers.FastTree.SumupInputData,Microsoft.ML.Trainers.FastTree.FeatureHistogram)"/>
            that it works just fine with zero deltas, to "overload" rows into having their targets, thus
            allowing a single sumup to accumulate multiple "features" on a single row.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.OneHotFeatureFlock">
            <summary>
            A feature flock for a set of features where per example at most one of the features has a
            non-zero bin.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.OneHotFeatureFlock.Indexer.#ctor(Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer,System.Int32,System.Int32)">
            <summary>
            Instantiates an indexer that translates from the "concatenated" bin space across all features,
            into the original logical space for each individual feature.
            </summary>
            <param name="indexer">The indexer into the "shared" <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/>, that we
            are translating into the original logical space for this feature, where values in the
            range of [<paramref name="min"/>,<paramref name="lim"/>) will map from 1 onwards, and all
            other values will map to 0</param>
            <param name="min">The minimum value from the indexer that will map to 1</param>
            <param name="lim">The exclusive upper bound on values from the indexer</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaRepeatIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaRepeatIntArray.Clone(System.Int32[])">
            <summary>
            Clone an IntArray containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned IntArray  </param>
            <returns> The cloned IntArray </returns>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.SegmentIntArray.TransitionCost">
            <summary>
            The cost of a transition between segments in bits.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.SegmentIntArray.SegmentFindOptimalCost">
            <summary>
            Used so we can set either the native or managed SegmentFindOptimalCost method one time and then
            never have to check again.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.SegmentIntArray.SegmentFindOptimalPath">
            <summary>
            Used so we can set either the native or managed SegmentFindOptimalPath method one time and then
            never have to check again.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SegmentIntArray.StatsOfBestEncoding(System.UInt32[],System.Int32,System.Boolean,System.Int64@,System.Int32@,System.UInt32@)">
             <summary>
             Finds the bits necessary for the optimal variable bit encoding of this
             array. If we are also finding the actual optimal path, it can only work
            
             This is a considerably less efficiency managed analogue to the
             C_SegmentFindOptimalPath and C_SegmentFindOptimalCost functions.
             It is used by the class only when not using the unmanaged library.
             </summary>
             <param name="ivalues">The values for which we should find the optimal cost. If
             findPath is active, the most significant 5 bits will be used to store the bitness
             with which this path should be chosen.</param>
             <param name="bitsForMaxItem">This should be the maximum number of bits necessary
             to encode the largest item in that array, or a higher value. Owing to the nature
             of the values as 32 bit quantities this value should be in the range [0,32], or
             21 if we are finding the
             cannot exceed 31.</param>
             <param name="findPath">Whether we should find the best path, by also storing the
             optimal path in the most 5 significant digits.</param>
             <param name="bits">The number of bits necessary for the optimal encoding.</param>
             <param name="transitions">The number of transitions necessary in the
             optimal encoding (only if findPath is true).</param>
             <param name="max">The maximum element in the ivalues array.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.SegmentIntArray.Clone(System.Int32[])">
            <summary>
            Clone an IntArray containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned IntArray  </param>
            <returns> The cloned IntArray </returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SingletonFeatureFlock">
            <summary>
            The singleton feature flock is the simplest possible sort of flock, that is, a flock
            over one feature.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray">
             <summary>
             This <see cref="T:Microsoft.ML.Trainers.FastTree.IntArray"/> implementation represents a sequence of values using parallel
             arrays of both values, as well as deltas indicating the number of values to the next
             explicit value. Values "between" these deltas are implicitly zero.
            
             Note that it is possible to misuse the deltas by making some of them themselves 0, allowing
             us to represent multiple values per row. In this case, <see cref="M:Microsoft.ML.Trainers.FastTree.IntArray.GetEnumerator"/>
             and <see cref="M:Microsoft.ML.Trainers.FastTree.IntArray.GetIndexer"/> will not have sensible values, but
             <see cref="M:Microsoft.ML.Trainers.FastTree.IntArray.Sumup(Microsoft.ML.Trainers.FastTree.SumupInputData,Microsoft.ML.Trainers.FastTree.FeatureHistogram)"/> will work and accumulate the same target into multiple bins.
             This trick should be used with caution, and is useful for the <see cref="T:Microsoft.ML.Trainers.FastTree.NHotFeatureFlock"/>.
             </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray.#ctor(System.Int32,Microsoft.ML.Trainers.FastTree.IntArrayBits,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}})">
            <summary>
            Construct a sparse int array from index, value pairs.
            </summary>
            <param name="length">The total length of the constructed array.</param>
            <param name="bitsPerItem">The number of bits required to store the values.</param>
            <param name="nonZeroValues">An ordered enumerable of (index,value) pairs.
            Each index should be strictly increasing as the iterable proceeds.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray.Clone(System.Int32[])">
            <summary>
            Clone an IntArray containing only the items indexed by <paramref name="itemIndices"/>
            </summary>
            <param name="itemIndices"> item indices will be contained in the cloned IntArray  </param>
            <returns> The cloned IntArray </returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray.SizeInBytes">
            <summary>
            Returns the number of bytes written by the member ToByteArray()
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DeltaSparseIntArray.ToByteArray(System.Byte[],System.Int32@)">
            <summary>
            Writes a binary representation of this class to a byte buffer, at a given position.
            The position is incremented to the end of the representation
            </summary>
            <param name="buffer">a byte array where the binary representation is written</param>
            <param name="position">the position in the byte array</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeShared">
            <summary>
            FastTreeTrainerBase is generic class and can't have shared object among classes.
            This class is to provide common for all classes object which we can use for lock purpose.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.TestData">
            <summary>
            If not null, it's a test data set passed in from training context. It will be converted to one element in
            <see cref="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.Tests"/> by calling <see cref="M:Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.GetCompatibleDataset(Microsoft.ML.Data.RoleMappedData,Microsoft.ML.PredictionKind,System.Int32[],System.Boolean)"/> in <see cref="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.InitializeTests"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.TestSets">
            <summary>
            Data sets used to evaluate the prediction scores produced the trained model during the training process.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.Tests">
            <summary>
            In the training process, <see cref="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.TrainSet"/>, <see cref="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ValidSet"/>, <see cref="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.TestSets"/> would be
            converted into <see cref="F:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.Tests"/> for efficient model evaluation.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.SchemaShape.Column,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor to use when instantiating the classes deriving from here through the API.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.#ctor(Microsoft.ML.Runtime.IHostEnvironment,`0,Microsoft.ML.SchemaShape.Column)">
            <summary>
            Constructor that is used when invoking the classes deriving from this, through maml.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.GetTestGraphHeader">
            <summary>
            A virtual method that is used to print header of test graph.
            Applications that need printing test graph are supposed to override
            it to print specific test graph header.
            </summary>
            <returns> string representation of test graph header </returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.GetTestGraphLine">
            <summary>
            A virtual method that is used to print a single line of test graph.
            Applications that need printing test graph are supposed to override
            it to print a specific line of test graph after a new iteration is finished.
            </summary>
            <returns> string representation of a line of test graph </returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ComputeTests">
            <summary>
            A virtual method that is used to compute test results after each iteration is finished.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.MakeGradientWrapper(Microsoft.ML.Runtime.IChannel)">
            <summary>
            Creates weights wrapping (possibly, trivial) for gradient target values.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.DataConverter.BinUpperBounds">
            <summary>
            The per-feature bin upper bounds. Implementations may differ on when all of the items
            in this array are initialized to non-null values but it must happen at least no later
            than immediately after we return from <see cref="M:Microsoft.ML.Trainers.FastTree.DataConverter.GetDataset"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.DataConverter.FeatureMap">
            <summary>
            In the event that any features are filtered, this will contain the feature map, where
            the indices are the indices of features within the dataset, and the tree as we are
            learning, and the values are the indices of the features within the original input
            data. This array is used to "rehydrate" the tree once we finish training, so that the
            feature indices are once again over the full set of features, as opposed to the subset
            of features we actually trained on. This can be null in the event that no filtering
            occurred.
            </summary>
            <seealso cref="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.RemapFeatures(System.Int32[])"/>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.CalculateBins(Microsoft.ML.Trainers.FastTree.BinFinder,Microsoft.ML.Data.VBuffer{System.Double}@,System.Int32,System.Int32,System.Double[]@)">
            <summary>
            Bins and input vector of feature values.
            </summary>
            <param name="binFinder">The instead of the bin finder to use</param>
            <param name="values">The values for one particular feature value across all examples</param>
            <param name="maxBins">The maximum number of bins to find</param>
            <param name="minDocsPerLeaf"></param>
            <param name="upperBounds">The bin upper bounds, maximum length will be <paramref name="maxBins"/></param>
            <returns>Whether finding the bins was successful or not. It will be unsuccessful iff <paramref name="values"/>
            has any missing values. In that event, the out parameters will be left as null.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.CreateSingletonFlock(Microsoft.ML.Runtime.IChannel,Microsoft.ML.Data.VBuffer{System.Double}@,System.Int32[],System.Double[])">
            <summary>
            Create a new feature flock with a given name, values and specified bin bounds.
            </summary>
            <param name="ch"></param>
            <param name="values">The values for this feature, that will be binned.</param>
            <param name="binnedValues">A working array of length equal to the length of the input feature vector</param>
            <param name="binUpperBounds">The upper bounds of the binning of this feature.</param>
            <returns>A derived binned derived feature vector.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.DiskImpl.ConstructDropSlotRanges(Microsoft.ML.Data.SlotCursor,Microsoft.ML.ValueGetter{Microsoft.ML.Data.VBuffer{System.Single}},Microsoft.ML.Data.VBuffer{System.Single}@)">
            <summary>
            Returns a slot dropper object that has ranges of slots to be dropped,
            based on an examination of the feature values.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.CreateDatasetSkeleton">
            <summary>
            Create an artificial metadata object to pad the Dataset
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList">
            <summary>
            A mutable list of index,value that may be kept sparse or dense.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.CountIndicesGT(System.Int32,System.Double)">
            <summary>
            Returns the count of all positions greater than an indicated value.
            </summary>
            <param name="length">The limit of indices to check</param>
            <param name="gtValue">The value against which the greater-than
            comparison is made</param>
            <returns>The count of all indices in the range of 0 to <paramref name="length"/>
            exclusive whose values are greater than <paramref name="gtValue"/></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.AllIndicesGT(System.Int32,System.Double)">
            <summary>
            Return all indices that are greater than an indicated value.
            </summary>
            <param name="lim">The limit of indices to return</param>
            <param name="gtValue">The value against which the greater-than
            comparison is made</param>
            <returns>All indices in the range of 0 to <paramref name="lim"/> exclusive
            whose values are greater than <paramref name="gtValue"/>, in
            increasing order</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.Binned(System.Double[],System.Int32)">
            <summary>
            An enumerable of the row/bin pair of every non-zero bin row according to the
            binning passed into this method.
            </summary>
            <param name="binUpperBounds">The binning to use for the enumeration</param>
            <param name="length">The number of rows in this feature</param>
            <returns>An enumerable that returns a pair of every row-index and binned value,
            where the row indices are increasing, the binned values are positive</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.ForwardIndexer.Item(System.Int32,System.Int32)">
            <summary>
            Access the value of a particular feature, at a particular row.
            </summary>
            <param name="featureIndex">A feature index, which indexes not the global feature indices,
            but the index into the subset of features specified at the constructor time</param>
            <param name="rowIndex">The row index to access, which must be non-decreasing, and must
            indeed be actually increasing for access on the same feature (for example, if you have two features,
            it is OK to access <c>[1, 5]</c>, then <c>[0, 5]</c>, but once this is done you cannot
            access the same feature at the same position.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.ForwardIndexer.#ctor(Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList[],System.Int32[],System.Int32[]@)">
            <summary>
            Initialize a forward indexer.
            </summary>
            <param name="values">Holds the values of the features</param>
            <param name="features">The array of feature indices this will index</param>
            <param name="workArray">A possibly shared working array, once used by this forward
            indexer it should not be used in any previously created forward indexer</param>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.BinUpperBounds">
            <summary> Bin boundaries </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.Microsoft#ML#Trainers#ICalculateFeatureContribution#FeatureContributionCalculator">
            <summary>
            Used to determine the contribution of each feature to the score of an example by <see cref="T:Microsoft.ML.Transforms.FeatureContributionCalculatingTransformer"/>.
            The calculation of feature contribution essentially consists in determining which splits in the tree have the most impact
            on the final score and assigning the value of the impact to the features determining the split. More precisely, the contribution of a feature
            is equal to the change in score produced by exploring the opposite sub-tree every time a decision node for the given feature is encountered.
            Consider a simple case with a single decision tree that has a decision node for the binary feature F1. Given an example that has feature F1
            equal to true, we can calculate the score it would have obtained if we chose the subtree corresponding to the feature F1 being equal to false
            while keeping the other features constant. The contribution of feature F1 for the given example is the difference between the original score
            and the score obtained by taking the opposite decision at the node corresponding to feature F1. This algorithm extends naturally to models with
            many decision trees.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble,System.Int32,System.String)">
            The following function is used in both FastTree and LightGBM so <see cref="T:Microsoft.ML.BestFriendAttribute"/> is required.
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.Microsoft#ML#Model#ICanSaveInSourceCode#SaveAsCode(System.IO.TextWriter,Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            write out a C# representation of the ensemble
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.Microsoft#ML#Model#ICanSaveInTextFormat#SaveAsText(System.IO.TextWriter,Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            Output the INI model to a given writer
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.Microsoft#ML#Model#ICanSaveInIniFormat#SaveAsIni(System.IO.TextWriter,Microsoft.ML.Data.RoleMappedSchema,Microsoft.ML.Calibrators.ICalibrator)">
            <summary>
            Output the INI model to a given writer
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.Microsoft#ML#Model#ICanGetSummaryInKeyValuePairs#GetSummaryInKeyValuePairs(Microsoft.ML.Data.RoleMappedSchema)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.SaveEnsembleAsCode(System.IO.TextWriter,Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            returns a C# representation of the ensemble
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.SaveTreeAsCode(Microsoft.ML.Trainers.FastTree.InternalRegressionTree,System.IO.TextWriter,Microsoft.ML.Data.VBuffer{System.ReadOnlyMemory{System.Char}}@)">
            <summary>
            Convert a single tree to code, called recursively
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.GetFeatureWeights(Microsoft.ML.Data.VBuffer{System.Single}@)">
            <summary>
            Get the cumulative split gains for each feature across all trees.
            </summary>
            <param name="weights">A <see cref="T:Microsoft.ML.Data.VBuffer`1"/> to hold the cumulative split gain value for each feature.
            The i-th element in <paramref name="weights"/> stores the cumulative split gain of the i-th feature.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.GetLeaf(System.Int32,Microsoft.ML.Data.VBuffer{System.Single}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Returns the leaf node in the requested tree for the given feature vector, and populates 'path' with the list of
            internal nodes in the path from the root to that leaf. If 'path' is null a new list is initialized. All elements
            in 'path' are cleared before filling in the current path nodes.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree"/> is derived from
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> plus a strongly-typed public attribute,
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.TrainedTreeEnsemble"/>, for exposing trained model's details to users.
            Its function, <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.CreateTreeEnsembleFromInternalDataStructure"/>, is
            called to create <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.TrainedTreeEnsemble"/> inside <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            Note that the major difference between <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree"/>
            and <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree"/> is the type of
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.TrainedTreeEnsemble"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.TrainedTreeEnsemble">
            <summary>
            An ensemble of trees exposed to users. It is a wrapper on the <see langword="internal"/>
            <see cref="T:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble"/> in <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree.Microsoft#ML#Model#ICanGetSummaryAsIDataView#GetSummaryDataView(Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            Used for the Summarize entrypoint.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree"/> is derived from
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> plus a strongly-typed public attribute,
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.TrainedTreeEnsemble"/>, for exposing trained model's details to users.
            Its function, <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.CreateTreeEnsembleFromInternalDataStructure"/>, is
            called to create <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.TrainedTreeEnsemble"/> inside <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            Note that the major difference between <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree"/>
            and <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnRegressionTree"/> is the type of
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.TrainedTreeEnsemble"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.TrainedTreeEnsemble">
            <summary>
            An ensemble of trees exposed to users. It is a wrapper on the <see langword="internal"/>
            <see cref="T:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble"/> in <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParametersBasedOnQuantileRegressionTree.Microsoft#ML#Model#ICanGetSummaryAsIDataView#GetSummaryDataView(Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            Used for the Summarize entrypoint.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingMetric">
            <summary>
            Stopping measurements for classification and regression.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.EarlyStoppingMetric.L1Norm">
            <summary>
            L1-norm of gradient.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.EarlyStoppingMetric.L2Norm">
            <summary>
            L2-norm of gradient.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingRankingMetric">
            <summary>
            Stopping measurements for ranking.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.EarlyStoppingRankingMetric.NdcgAt1">
            <summary>
            NDCG@1
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.EarlyStoppingRankingMetric.NdcgAt3">
            <summary>
            NDCG@3
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree binary classification model using FastTree.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastTree](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double))
             or [FastTree(Options)](xref:"Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-binary-classification.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Binary classification |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | Yes |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-fasttree.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> as used in
            [FastTree(Options)](xref:"Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options.UnbalancedSets">
            <summary>
            Whether to use derivatives optimized for unbalanced training data.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options._earlyStoppingMetric">
            <summary>
            internal state of <see cref="P:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options.EarlyStoppingMetric"/>. It should be always synced with
            <see cref="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingMetrics"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options.EarlyStoppingMetric">
            <summary>
            Early stopping metrics.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options.#ctor">
            <summary>
            Create a new <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options"/> object with default values.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.LoadNameValue">
            <summary>
            The LoadName for the assembly containing the trainer.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="exampleWeightColumnName">The name for the column containing the example weight.</param>
            <param name="learningRate">The learning rate.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree regression model using FastTree.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastTree](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double))
             or [FastTree(Options)](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-regression.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Regression |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | Yes |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-fasttree.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> as used in
            [FastTree(Options)](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options._earlyStoppingMetric">
            <summary>
            internal state of <see cref="P:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options.EarlyStoppingMetric"/>. It should be always synced with
            <see cref="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingMetrics"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options.EarlyStoppingMetric">
            <summary>
            Early stopping metrics.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options.#ctor">
            <summary>
            Create a new <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options"/> object with default values.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.PredictionKind">
            <summary>
            The type of prediction for the trainer.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="exampleWeightColumnName">The name for the column containing the example weight.</param>
            <param name="learningRate">The learning rate.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of examples allowed in a leaf of a regression tree, out of the subsampled data.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.GetDatasetRegressionLabels(Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            Gets the regression labels that were stored in the dataset skeleton, or
            constructs them from the ratings if absent. This returns null if the
            dataset itself is null.
            </summary>
            <param name="set">The dataset</param>
            <returns>The list of regression targets, or null if <paramref name="set"/> was null</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RegressionPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree regression model using Tweedie loss function.
             This trainer is a generalization of Poisson, compound Poisson, and gamma regression.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastTreeTweedie](xref:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double))
             or [FastTreeTweedie(Options)](xref:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-regression.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Regression |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | Yes |
            
             ### Training Algorithm Details
             The Tweedie boosting model follows the mathematics established in
             [Insurance Premium Prediction via Gradient Tree-Boosted Tweedie Compound Poisson Models</a> from Yang, Quan, and Zou](https://arxiv.org/pdf/1508.06378.pdf).
             For an introduction to Gradient Boosting, and more information, see:
             [Wikipedia: Gradient boosting(Gradient tree boosting)](https://en.wikipedia.org/wiki/Gradient_boosting#Gradient_tree_boosting) or
             [Greedy function approximation: A gradient boosting machine](https://projecteuclid.org/DPubS?service=UI&amp;version=1.0&amp;verb=Display&amp;handle=euclid.aos/1013203451).
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> as used in
            [FastTreeTweedie(Options)](xref:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options.Index">
            <summary>
            The index parameter for the Tweedie distribution, in the range [1, 2]. 1 is Poisson loss, 2 is gamma loss,
            and intermediate values are compound Poisson loss.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options._earlyStoppingMetric">
            <summary>
            internal state of <see cref="P:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options.EarlyStoppingMetric"/>. It should be always synced with
            <see cref="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingMetrics"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options.EarlyStoppingMetric">
            <summary>
            Early stopping metrics.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options.#ctor">
            <summary>
            Create a new <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options"/> object with default values.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="exampleWeightColumnName">The name for the column containing the example weight.</param>
            <param name="learningRate">The learning rate.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.GetDatasetRegressionLabels(Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            Gets the regression labels that were stored in the dataset skeleton, or
            constructs them from the ratings if absent. This returns null if the
            dataset itself is null.
            </summary>
            <param name="set">The dataset</param>
            <returns>The list of regression targets, or null if <paramref name="set"/> was null</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RegressionPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree ranking model using FastTree.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastTree](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double))
             or [FastTree(Options)](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-ranking.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Ranking |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | No |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-fasttree.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> as used in
            [FastTree(Options)](xref:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.CustomGains">
            <summary>
            Comma-separated list of gains associated with each relevance label.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.UseDcg">
            <summary>
            Whether to train using discounted cumulative gain (DCG) instead of normalized DCG (NDCG).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.NdcgTruncationLevel">
            <summary>
            The maximum NDCG truncation to use in the
            <a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/MSR-TR-2010-82.pdf">LambdaMAR algorithm</a>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options._earlyStoppingMetric">
            <summary>
            internal state of <see cref="P:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.EarlyStoppingMetric"/>. It should be always synced with
            <see cref="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingMetrics"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.EarlyStoppingMetric">
            <summary>
            Early stopping metrics.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options.#ctor">
            <summary>
            Create a new <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options"/> object with default values.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.PredictionKind">
            <summary>
            The prediction kind for this trainer.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="rowGroupColumnName">The name for the column containing the group ID. </param>
            <param name="exampleWeightColumnName">The name for the column containing the examle weight.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of examples allowed in a leaf of a regression tree, out of the subsampled data.</param>
            <param name="learningRate">The learning rate.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.CreateStandardTest(Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            Create standard test for dataset.
            </summary>
            <param name="dataset">dataset used for testing</param>
            <returns>standard test for the dataset</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.CreateSpecialTrainSetTest">
            <summary>
            Create the special test for train set.
            </summary>
            <returns>test for train set</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.CreateSpecialValidSetTest">
            <summary>
            Create the special test for valid set.
            </summary>
            <returns>test for train set</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.CreateFirstTestSetTest">
            <summary>
            Create the test for the first test set.
            </summary>
            <returns>test for the first test set</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.GetTestGraphHeader">
            <summary>
            Get the header of test graph
            </summary>
            <returns>Test graph header</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RankingPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeOptions">
            <summary>
            Options for tree trainers.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.ParallelTrainer">
            <summary>
            Allows to choose Parallel FastTree Learning Algorithm.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.NumberOfThreads">
            <summary>
            The number of threads to use.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.Seed">
            <summary>
            The seed of the random number generator.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureSelectionSeed">
            <summary>
            The seed of the active feature selection.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.EntropyCoefficient">
            <summary>
            The entropy (regularization) coefficient between 0 and 1.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.HistogramPoolSize">
            <summary>
            The number of histograms in the pool (between 2 and numLeaves).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.DiskTranspose">
            <summary>
            Whether to utilize the disk or the data's native transposition facilities (where applicable) when performing the transpose.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureFlocks">
            <summary>
            Whether to collectivize features during dataset preparation to speed up training.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.CategoricalSplit">
            <summary>
            Whether to do split based on multiple categorical feature values.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MaximumCategoricalGroupCountPerNode">
            <summary>
            Maximum categorical split groups to consider when splitting on a categorical feature. Split groups are a collection of split points. This is used to reduce overfitting when there many categorical features.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MaximumCategoricalSplitPointCount">
            <summary>
            Maximum categorical split points to consider when splitting on a categorical feature.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MinimumExampleFractionForCategoricalSplit">
            <summary>
            Minimum categorical example percentage in a bin to consider for a split. Default is 0.1% of all training examples.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MinimumExamplesForCategoricalSplit">
            <summary>
            Minimum categorical example count in a bin to consider for a split.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.Bias">
            <summary>
            Bias for calculating gradient for each feature bin for a categorical feature.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.Bundling">
            <summary>
            Bundle low population bins. Bundle.None(0): no bundling, Bundle.AggregateLowPopulation(1): Bundle low population, Bundle.Adjacent(2): Neighbor low population bundle.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MaximumBinCountPerFeature">
            <summary>
            Maximum number of distinct values (bins) per feature.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.SparsifyThreshold">
            <summary>
            Sparsity level needed to use sparse feature representation.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureFirstUsePenalty">
            <summary>
            The feature first use penalty coefficient.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureReusePenalty">
            <summary>
            The feature re-use penalty (regularization) coefficient.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.GainConfidenceLevel">
            <summary>
            Tree fitting gain confidence requirement. Only consider a gain if its likelihood versus a random choice gain is above this value.
            </summary>
            <value>
            Value of 0.95 would mean restricting to gains that have less than a 0.05 chance of being generated randomly through choice of a random split.
            Valid range is [0,1).
            </value>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.SoftmaxTemperature">
            <summary>
            The temperature of the randomized softmax distribution for choosing the feature.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.ExecutionTime">
            <summary>
            Print execution time breakdown to ML.NET channel.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.NumberOfLeaves">
            <summary>
            The max number of leaves in each regression tree.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.MinimumExampleCountPerLeaf">
            <summary>
            The minimal number of data points required to form a new tree leaf.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.NumberOfTrees">
            <summary>
            Total number of decision trees to create in the ensemble.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureFraction">
            <summary>
            The fraction of features (chosen randomly) to use on each iteration. Use 0.9 if only 90% of features is needed.
            Lower numbers help reduce over-fitting.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.BaggingSize">
            <summary>
            Number of trees in each bag (0 for disabling bagging).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.BaggingExampleFraction">
            <summary>
            Percentage of training examples used in each bag. Default is 0.7 (70%).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureFractionPerSplit">
            <summary>
            The fraction of features (chosen randomly) to use on each split. If it's value is 0.9, 90% of all features would be dropped in expectation.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.Smoothing">
            <summary>
            Smoothing parameter for tree regularization.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.AllowEmptyTrees">
            <summary>
            When a root split is impossible, allow training to proceed.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.FeatureCompressionLevel">
            <summary>
            The level of feature compression to use.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.CompressEnsemble">
            <summary>
            Compress the tree Ensemble.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.PrintTestGraph">
            <summary>
            Print metrics graph for the first test set.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.PrintTrainValidGraph">
            <summary>
            Print Train and Validation metrics in graph.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeOptions.TestFrequency">
            <summary>
            Calculate metric values for train/valid/test every k rounds.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions">
            <summary>
            Options for boosting tree trainers.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.BestStepRankingRegressionTrees">
            <summary>
            Option for using best regression step trees.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.UseLineSearch">
            <summary>
            Determines whether to use line search for a step size.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.MaximumNumberOfLineSearchSteps">
            <summary>
            Number of post-bracket line search steps.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.MinimumStepSize">
            <summary>
            Minimum line search step size.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.OptimizationAlgorithmType">
            <summary>
            Types of optimization algorithms.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.OptimizationAlgorithm">
            <summary>
            Optimization algorithm to be used.
            </summary>
            <value>
            See <see cref="T:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.OptimizationAlgorithmType"/> for available optimizers.
            </value>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingRuleFactory">
            <summary>
            Early stopping rule. (Validation set (/valid) is required).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions._earlyStoppingRuleBase">
            <summary>
            The underlying state of <see cref="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingRuleFactory"/> and <see cref="P:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingRule"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingRule">
            <summary>
            Early stopping rule used to terminate training process once meeting a specified criterion. Possible choices are
            <see cref="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase"/>'s implementations such as <see cref="T:Microsoft.ML.Trainers.FastTree.TolerantEarlyStoppingRule"/> and <see cref="T:Microsoft.ML.Trainers.FastTree.GeneralityLossRule"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingMetrics">
            <summary>
            Early stopping metrics. (For regression, 1: L1, 2:L2; for ranking, 1:NDCG@1, 3:NDCG@3).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EnablePruning">
            <summary>
            Enable post-training tree pruning to avoid overfitting. It requires a validation set.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.UseTolerantPruning">
            <summary>
            Use window and tolerance for pruning.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.PruningThreshold">
            <summary>
            The tolerance threshold for pruning.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.PruningWindowSize">
            <summary>
            The moving window size for pruning.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.LearningRate">
            <summary>
            The learning rate.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.Shrinkage">
            <summary>
            Shrinkage.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.DropoutRate">
            <summary>
            Dropout rate for tree regularization.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.GetDerivativesSampleRate">
            <summary>
            Sample each query 1 in k times in the GetDerivatives function.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.WriteLastEnsemble">
            <summary>
            Write the last ensemble instead of the one determined by early stopping.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.MaximumTreeOutput">
            <summary>
            Upper bound on absolute value of single tree output.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.RandomStart">
            <summary>
            Training starts from random ordering (determined by /r1).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.FilterZeroLambdas">
            <summary>
            Filter zero lambdas during training.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.BaselineScoresFormula">
            <summary>
            Freeform defining the scores that should be used as the baseline ranker.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.BaselineAlphaRisk">
            <summary>
            Baseline alpha for tradeoffs of risk (0 is normal training).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.PositionDiscountFreeform">
            <summary>
            The discount freeform which specifies the per position discounts of examples in a query (uses a single variable P for position where P=0 is first position).
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTree">
            <summary>
            The Entry Point for the FastTree Binary Classifier.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a binary classification model with generalized additive models (GAM).
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [Gam](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double))
             or [Gam(Options)](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-binary-classification.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Binary classification |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | No |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-gam.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/> as used in
            [Gam(Options)](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options.UnbalancedSets">
            <summary>
            Whether to use derivatives optimized for unbalanced training data.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/>
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="rowGroupColumnName">The name for the column containing the example weight.</param>
            <param name="numberOfIterations">The number of iterations to use in learning the features.</param>
            <param name="learningRate">The learning rate. GAMs work best with a small learning rate.</param>
            <param name="maximumBinCountPerFeature">The maximum number of bins to use to approximate features</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamBinaryModelParameters.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.Double[][],System.Double[][],System.Double,System.Int32,System.Int32[])">
            <summary>
            Construct a new Binary Classification GAM with the defined properties.
            </summary>
            <param name="env">The Host Environment</param>
            <param name="binUpperBounds">An array of arrays of bin-upper-bounds for each feature.</param>
            <param name="binEffects">An array of arrays of effect sizes for each bin for each feature.</param>
            <param name="intercept">The intercept term for the model. Also referred to as the bias or the mean effect.</param>
            <param name="inputLength">The number of features passed from the dataset. Used when the number of input features is
            different than the number of shape functions. Use default if all features have a shape function.</param>
            <param name="featureToInputMap">A map from the feature shape functions, as described by <paramref name="binUpperBounds"/> and <paramref name="binEffects"/>.
            to the input feature. Used when the number of input features is different than the number of shape functions. Use default if all features have
            a shape function.</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamModelParametersBase">
            <summary>
            The base class for GAM Model Parameters.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.Bias">
            <summary>
            The model intercept. Also known as bias or mean effect.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.NumberOfShapeFunctions">
            <summary>
            The number of shape functions used in the model.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.Microsoft#ML#Trainers#ICalculateFeatureContribution#FeatureContributionCalculator">
            <summary>
            Used to determine the contribution of each feature to the score of an example by <see cref="T:Microsoft.ML.Transforms.FeatureContributionCalculatingTransformer"/>.
            For Generalized Additive Models (GAM), the contribution of a feature is equal to the shape function for the given feature evaluated at
            the feature value.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.GetBinUpperBounds(System.Int32)">
            <summary>
            Get the bin upper bounds for each feature.
            </summary>
            <param name="featureIndex">The index of the feature (in the training vector) to get.</param>
            <returns>The bin upper bounds. May be zero length if this feature has no bins.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.GetBinUpperBounds">
            <summary>
            Get all the bin upper bounds.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.GetBinEffects(System.Int32)">
            <summary>
            Get the binned weights for each feature.
            </summary>
            <param name="featureIndex">The index of the feature (in the training vector) to get.</param>
            <returns>The binned effects for each feature. May be zero length if this feature has no bins.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.GetBinEffects">
            <summary>
            Get all the binned effects.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand">
            <summary>
            The GAM model visualization command. Because the data access commands must access private members of
            <see cref="T:Microsoft.ML.Trainers.FastTree.GamModelParametersBase"/>, it is convenient to have the command itself nested within the base
            predictor class.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.NumFeatures">
            <summary>
            These are the number of input features, as opposed to the number of features used within GAM
            which may be lower.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.SaveIfNeeded(Microsoft.ML.Runtime.IHost,Microsoft.ML.Runtime.IChannel,System.String)">
            <summary>
            This will write out a file, if needed. In all cases if something is written it will return
            a version number, with an indication based on sign of whether anything was actually written
            in this call.
            </summary>
            <param name="host">The host from the command</param>
            <param name="ch">The channel from the command</param>
            <param name="outFile">The (optionally empty) output file</param>
            <returns>Returns <c>null</c> if the model file could not be saved because <paramref name="outFile"/>
            was <c>null</c> or whitespace. Otherwise, if the current version if newer than the last version saved,
            it will save, and return that version. (In this case, the number is non-negative.) Otherwise, if the current
            version was the last version saved, then it will return the bitwise not of that version number (in this case,
            the number is negative).</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.FeatureInfo.UpperBounds">
            <summary>
            The upper bounds of each bin.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.FeatureInfo.BinEffects">
            <summary>
            The amount added to the model for a document falling in a given bin.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.FeatureInfo.DocCounts">
            <summary>
            The number of documents in each bin.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.FeatureInfo.Version">
            <summary>
            The version of the GAM context that has these values.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Context.FeatureInfo.CategoricalFeatureIndex">
            <summary>
            For features belonging to the same categorical, this value will be the same,
            Set to -1 for non-categoricals.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamModelParametersBase.VisualizationCommand.Init(Microsoft.ML.Runtime.IChannel)">
            <summary>
            Attempts to initialize required items, from the input model file. It could throw if something goes wrong.
            </summary>
            <param name="ch">The channel</param>
            <returns>A structure containing essential information about the GAM dataset that enables
            operations on top of that structure.</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a regression model with generalized additive models (GAM).
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [Gam](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double))
             or [Gam(Options)](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-regression.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Regression |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | No |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-gam.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer"/> as used in
            [Gam(Options)](xref:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options.PruningMetrics">
            <summary>
            Determines what metric to use for pruning.
            </summary>
            <value>
            1 means use least absolute deviation; 2 means use least squares. Default is 2.
            </value>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="rowGroupColumnName">The name for the column containing the example weight.</param>
            <param name="numberOfIterations">The number of iterations to use in learning the features.</param>
            <param name="learningRate">The learning rate. GAMs work best with a small learning rate.</param>
            <param name="maximumBinCountPerFeature">The maximum number of bins to use to approximate features</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RegressionPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamRegressionModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamRegressionModelParameters.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.Double[][],System.Double[][],System.Double,System.Int32,System.Int32[])">
            <summary>
            Construct a new Regression GAM with the defined properties.
            </summary>
            <param name="env">The Host Environment</param>
            <param name="binUpperBounds">An array of arrays of bin-upper-bounds for each feature.</param>
            <param name="binEffects">Anay array of arrays of effect sizes for each bin for each feature.</param>
            <param name="intercept">The intercept term for the model. Also referred to as the bias or the mean effect.</param>
            <param name="inputLength">The number of features passed from the dataset. Used when the number of input features is
            different than the number of shape functions. Use default if all features have a shape function.</param>
            <param name="featureToInputMap">A map from the feature shape functions (as described by the binUpperBounds and BinEffects)
            to the input feature. Used when the number of input features is different than the number of shape functions. Use default if all features have
            a shape function.</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3">
            <summary>
            Base class for GAM trainers.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase">
            <summary>
            Base class for GAM-based trainer options.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.EntropyCoefficient">
            <summary>
            The entropy (regularization) coefficient between 0 and 1.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.GainConfidenceLevel">
            <summary>
            Tree fitting gain confidence requirement. Only consider a gain if its likelihood versus a random choice gain is above this value.
            </summary>
            <value>
            Value of 0.95 would mean restricting to gains that have less than a 0.05 chance of being generated randomly through choice of a random split.
            Valid range is [0,1).
            </value>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.NumberOfIterations">
            <summary>
            Total number of passes over the training data.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.NumberOfThreads">
            <summary>
            The number of threads to use.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.LearningRate">
            <summary>
            The learning rate.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.DiskTranspose">
            <summary>
            Whether to utilize the disk or the data's native transposition facilities (where applicable) when performing the transpose.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.MaximumBinCountPerFeature">
            <summary>
            The maximum number of distinct values (bins) per feature.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.MaximumTreeOutput">
            <summary>
            The upper bound on the absolute value of a single tree output.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.GetDerivativesSampleRate">
            <summary>
            Sample each query 1 in k times in the GetDerivatives function.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.Seed">
            <summary>
            The seed of the random number generator.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.MinimumExampleCountPerLeaf">
            <summary>
            The minimal number of data points required to form a new tree leaf.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.FeatureFlocks">
            <summary>
            Whether to collectivize features during dataset preparation to speed up training.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.OptionsBase.EnablePruning">
            <summary>
            Enable post-training tree pruning to avoid overfitting. It requires a validation set.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.HasValidSet">
            <summary>
            Whether a validation set was passed in
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.TrainMainEffectsModel(Microsoft.ML.Runtime.IChannel)">
            <summary>
            Training algorithm for the single-feature functions f(x)
            </summary>
            <param name="ch">The channel to write to</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.UpdateScores(System.Int32)">
            <summary>
            Update scores for all tracked datasets
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.UpdateScoresForSet(Microsoft.ML.Trainers.FastTree.Dataset,System.Double[],System.Int32)">
            <summary>
            Updates the scores for a dataset.
            </summary>
            <param name="dataset">The dataset to use.</param>
            <param name="scores">The current scores for this dataset</param>
            <param name="iteration">The iteration of the algorithm.
            Used to look up the sub-graph to use to update the score.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.CombineGraphs(Microsoft.ML.Runtime.IChannel)">
            <summary>
            Combine the single-feature single-tree graphs to a single-feature model
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.DefineDocumentThreadBlocks(System.Int32,System.Int32,System.Int32[]@)">
            <summary>
            Distribute the documents into blocks to be computed on each thread
            </summary>
            <param name="numDocs">The number of documents in the dataset</param>
            <param name="blocks">An array containing the starting point for each thread;
            the next position is the exclusive ending point for the thread.</param>
            <param name="numThreads">The number of threads used.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.CenterGraph">
            <summary>
            Center the graph using the mean response per feature on the training set.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.CreateEfficientBinning">
            <summary>
            Process bins such that only bin upper bounds and bin effects remain where
            the effect changes.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.LeafSplitHelper.GetLeafSplitGain(System.Int32,System.Double,System.Double)">
            <summary>
            Returns the split gain for a particular leaf. Used on two leaves to calculate
            the squared error gain for a particular leaf.
            </summary>
            <param name="count">Number of documents in this leaf</param>
            <param name="sumTargets">Sum of the target values for this leaf</param>
            <param name="sumWeights">Sum of the weights for this leaf, not meaningful if
            <see cref="P:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.HasWeights"/> is <c>false</c></param>
            <returns>The gain in least squared error</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.LeafSplitHelper.CalculateSplittedLeafOutput(System.Int32,System.Double,System.Double)">
            <summary>
            Calculates the output value for a leaf after splitting.
            </summary>
            <param name="count">Number of documents in this leaf</param>
            <param name="sumTargets">Sum of the target values for this leaf</param>
            <param name="sumWeights">Sum of the weights for this leaf, not meaningful if
            <see cref="P:Microsoft.ML.Trainers.FastTree.GamTrainerBase`3.HasWeights"/> is <c>false</c></param>
            <returns>The output value for a leaf</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.RandomForestTrainerBase`3.#ctor(Microsoft.ML.Runtime.IHostEnvironment,`0,Microsoft.ML.SchemaShape.Column,System.Boolean)">
            <summary>
            Constructor invoked by the maml code-path.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.RandomForestTrainerBase`3.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.SchemaShape.Column,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Constructor invoked by the API code-path.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestOptionsBase">
            <summary>
            Base class for fast forest trainer options.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastForestOptionsBase.NumberOfQuantileSamples">
            <summary>
            The number of data points to be sampled from each leaf to find the distribution of labels.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.FastForestBinaryModelParameters.PredictionKind">
            <summary>
            The type of prediction for this trainer.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree binary classification model using Fast Forest.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastForest](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32))
             or [FastForest(Options)](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-binary-classification.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Binary classification |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | Yes |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-fastforest.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> as used in
            [FastForest(Options)](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options.MaximumOutputMagnitudePerTree">
            <summary>
            The upper bound on the absolute value of a single tree output.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="exampleWeightColumnName">The name for the column containing the example weight.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.BinaryPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionModelParameters">
            <summary>
            Model parameters for <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestRegressionModelParameters.QuantileStatistics.#ctor(System.Single[],System.Single[],System.Boolean)">
            <summary>
            data array will be modified because of sorting if it is not already sorted yet and this class owns the data.
            Modifying the data outside will lead to erroneous output by this class
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestRegressionModelParameters.QuantileStatistics.GetQuantile(System.Single)">
            <summary>
            There are many ways to estimate quantile. This implementations is based on R-8, SciPy-(1/3,1/3)
            https://en.wikipedia.org/wiki/Quantile#Estimating_the_quantiles_of_a_population
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer">
             <summary>
             The <see cref="T:Microsoft.ML.IEstimator`1"/> for training a decision tree regression model using Fast Forest.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             To create this trainer, use [FastForest](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32))
             or [FastForest(Options)](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options)).
            
             [!include[io](~/../docs/samples/docs/api-reference/io-columns-regression.md)]
            
             ### Trainer Characteristics
             |  |  |
             | -- | -- |
             | Machine learning task | Regression |
             | Is normalization required? | No |
             | Is caching required? | No |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.FastTree |
             | Exportable to ONNX | Yes |
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/algo-details-fastforest.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)"/>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options)"/>
             <seealso cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> as used in
            [FastForest(Options)](xref:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options)).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options.ShuffleLabels">
            <summary>
            Whether to shuffle the labels on every iteration.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/>
            </summary>
            <param name="env">The private instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="labelColumnName">The name of the label column.</param>
            <param name="featureColumnName">The name of the feature column.</param>
            <param name="exampleWeightColumnName">The optional name for the column containing the example weight.</param>
            <param name="numberOfLeaves">The max number of leaves in each regression tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of documents allowed in a leaf of a regression tree, out of the subsampled data.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> by using the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options"/> class.
            </summary>
            <param name="env">The instance of <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="options">Algorithm advanced settings.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Fit(Microsoft.ML.IDataView,Microsoft.ML.IDataView)">
            <summary>
            Trains a <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> using both training and validation data, returns
            a <see cref="T:Microsoft.ML.Data.RegressionPredictionTransformer`1"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase">
            <summary>
            A container base class for exposing <see cref="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree"/>'s and
            <see cref="T:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree"/>'s attributes to users.
            This class should not be mutable, so it contains a lot of read-only members.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._tree">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/> is an immutable wrapper over <see cref="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._tree"/> for exposing some tree's
            attribute to users.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._lteChild">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._gtChild">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.RightChild"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._numericalSplitFeatureIndexes">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitFeatureIndexes"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._numericalSplitThresholds">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitThresholds"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._categoricalSplitFlags">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._leafValues">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeafValues"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._splitGains">
            <summary>
            See <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.SplitGains"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild"/>[i] is the i-th node's child index used when
            (1) the numerical feature indexed by <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitFeatureIndexes"/>[i] is less than or equal
            to the threshold <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitThresholds"/>[i], or
            (2) the categorical features indexed by <see cref="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalCategoricalSplitFeatureRangeAt(System.Int32)"/>'s
            returned value with nodeIndex=i is NOT a sub-set of <see cref="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalSplitFeaturesAt(System.Int32)"/> with
            nodeIndex=i.
            Note that the case (1) happens only when <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>[i] is false and otherwise (2)
            occurs. A non-negative returned value means a node (i.e., not a leaf); for example, 2 means the 3rd node in
            the underlying <see cref="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._tree"/>. A negative returned value means a leaf; for example, -1 stands for the
            <see langword="~"/>(-1)-th leaf in the underlying <see cref="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._tree"/>. Note that <see langword="~"/> is the
            bitwise complement operator in C#; for details, see
            https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/bitwise-complement-operator.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.RightChild">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.RightChild"/>[i] is the i-th node's child index used when the two conditions, (1) and (2),
            described in <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild"/>'s document are not true. Its return value follows the format
            used in <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitFeatureIndexes">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitFeatureIndexes"/>[i] is the feature index used the splitting function of the
            i-th node. This value is valid only if <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>[i] is false.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitThresholds">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitThresholds"/>[i] is the threshold on feature indexed by
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumericalSplitFeatureIndexes"/>[i], where i is the i-th node's index
            (for example, i is 1 for the 2nd node in <see cref="F:Microsoft.ML.Trainers.FastTree.RegressionTreeBase._tree"/>).
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags">
            <summary>
            Determine the types of splitting function. If <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>[i] is true, the i-th
            node's uses categorical splitting function. Otherwise, traditional numerical split is used.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeafValues">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeafValues"/>[i] is the learned value at the i-th leaf.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalSplitFeaturesAt(System.Int32)">
            <summary>
            Return categorical thresholds used at node indexed by nodeIndex. If the considered input feature does NOT
            matche any of values returned by <see cref="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalSplitFeaturesAt(System.Int32)"/>, we call it a
            less-than-threshold event and therefore <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.LeftChild"/>[nodeIndex] is the child node that input
            should go next. The returned value is valid only if <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>[nodeIndex] is true.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalCategoricalSplitFeatureRangeAt(System.Int32)">
            <summary>
            Return categorical thresholds' range used at node indexed by nodeIndex. A categorical split at node indexed
            by nodeIndex can consider multiple consecutive input features at one time; their range is specified by
            <see cref="M:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.GetCategoricalCategoricalSplitFeatureRangeAt(System.Int32)"/>. The returned value is always a 2-element
            array; its 1st element is the starting index and its 2nd element is the endining index of a feature segment.
            The returned value is valid only if <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.CategoricalSplitFlags"/>[nodeIndex] is true.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.SplitGains">
            <summary>
            The gains obtained by splitting data at nodes. Its i-th value is computed from to the split at the i-th node.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumberOfLeaves">
            <summary>
            Number of leaves in the tree. Note that <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumberOfLeaves"/> does not take non-leaf nodes into account.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumberOfNodes">
            <summary>
            Number of nodes in the tree. This doesn't include any leaves. For example, a tree with node0->node1,
            node0->leaf3, node1->leaf1, node1->leaf2, <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumberOfNodes"/> and <see cref="P:Microsoft.ML.Trainers.FastTree.RegressionTreeBase.NumberOfLeaves"/> should
            be 2 and 3, respectively.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.RegressionTree">
            <summary>
            A container class for exposing <see cref="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree"/>'s attributes to users.
            This class should not be mutable, so it contains a lot of read-only members. Note that
            <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTree"/> is identical to <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/> but in
            another derived class <see cref="T:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree"/> some attributes are added.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree">
            <summary>
            A container class for exposing <see cref="T:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree"/>'s attributes to users.
            This class should not be mutable, so it contains a lot of read-only members. In addition to
            things inherited from <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/>, we add <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSamplesAt(System.Int32)"/>
            and <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSampleWeightsAt(System.Int32)"/> to expose (sub-sampled) training labels falling into
            the leafIndex-th leaf and their weights.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSamples">
            <summary>
            Sample labels from training data. <see cref="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSamples"/>[i] stores the labels falling into the
            i-th leaf.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSampleWeights">
            <summary>
            Sample labels' weights from training data. <see cref="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSampleWeights"/>[i] stores the weights for
            labels falling into the i-th leaf. <see cref="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSampleWeights"/>[i][j] is the weight of
            <see cref="F:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree._leafSamples"/>[i][j].
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSamplesAt(System.Int32)">
            <summary>
            Return the training labels falling into the specified leaf.
            </summary>
            <param name="leafIndex">The index of the specified leaf.</param>
            <returns>Training labels</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSampleWeightsAt(System.Int32)">
            <summary>
            Return the weights for training labels falling into the specified leaf. If <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSamplesAt(System.Int32)"/>
            and <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSampleWeightsAt(System.Int32)"/> use the same input, the i-th returned value of this function is
            the weight of the i-th label in <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSamplesAt(System.Int32)"/>.
            </summary>
            <param name="leafIndex">The index of the specified leaf.</param>
            <returns>Training labels' weights</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SumupPerformanceCommand">
            <summary>
            This is an internal utility command to measure the performance of the IntArray sumup operation.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TrivialGradientWrapper">
            <summary>
            Trivial weights wrapper. Creates proxy class holding the targets.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.BestStepRegressionGradientWrapper">
            <summary>
            Provides weights used when best regression step option is on.
            </summary>
            Second-derivatives used as weights in a leaf when one makes Newton-Raphson step (taken in account when regression tree is trained).
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.QueryWeightsGradientWrapper">
            <summary>
            Wraps targets with query weights. Regression tree is built for weighted data, and weights are used for mean
            calculation at Newton-Raphson step.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.QueryWeightsBestResressionStepGradientWrapper">
            <summary>
            Wraps targets whan both query weights and best step regression options are active.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.DcgCalculator._secondLevelcomparers">
            <summary>
            Contains the instances for a second Level comparer, which gets applied after the initial rank
            based ordering has happened. The array stores one second level comparer per thread.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Constructs a DCG calculator
            </summary>
            <param name="maxDocsPerQuery">the maximum number of documents per query</param>
            <param name="sortingAlgorithm">a string describing the sorting algorithm to use</param>
            <param name="topNDocsForIdealDcg">specifies the ideal DCG@ computation.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.MaxDcg(System.Int16[],System.Int32[],System.Int32,System.Int32[][])">
            <summary>
            Calculates the natural-based max DCG at a given truncation
            </summary>
            <param name="labels">vector of labels</param>
            <param name="boundaries">vector of query boundaries</param>
            <param name="trunc">truncation to use</param>
            <param name="labelCounts"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.MaxDcgQuery(System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            Calculates the natural-based max DCG at a given truncation for a query
            </summary>
            <param name="labels">vector of labels</param>
            <param name="begin">Index of the first document</param>
            <param name="labelCounts"></param>
            <param name="trunc">truncation to use</param>
            <param name="numDocuments"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.Ndcg3(Microsoft.ML.Trainers.FastTree.Dataset,System.Int16[],System.Double[])">
            <summary>
            Efficient computation of average NDCG@3 for the entire dataset
            Note that it is virtual and MPI provides faster implementations for MPI
            </summary>
            <param name="dataset">the dataset</param>
            <param name="scores">vector of scores</param>
            <param name="labels"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.DCG3(System.Double[],System.Int16[],System.Int32,System.Int32)">
            <summary>
            Efficient computation of natural-based pessimistic DCG@3 for a given query
            </summary>
            <param name="scores">vector of scores</param>
            <param name="labels">vector of labels</param>
            <param name="begin">index of first document in query</param>
            <param name="end">index of first document in next query</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.Ndcg1(Microsoft.ML.Trainers.FastTree.Dataset,System.Int16[],System.Double[])">
            <summary>
            Efficient computation of average NDCG@1 for the entire dataset
            Note that it is virtual and MPI provides faster implementations for MPI
            </summary>
            <param name="dataset">the dataset</param>
            <param name="labels"></param>
            <param name="scores">the vector of score from previous rounds</param>
            <returns>average NDCG@1 for an entire dataset</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.DCG1(System.Double[],System.Int16[],System.Int32,System.Int32)">
            <summary>
            Calculates the natural-based pessimistic DCG@1 of scores(query)
            </summary>
            <param name="scores">vector of scores</param>
            <param name="labels">vector of labels</param>
            <param name="begin">index of first document in query</param>
            <param name="end">index of first document in next query</param>
            <returns>DCG@1</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.NdcgRangeFromScores(Microsoft.ML.Trainers.FastTree.Dataset,System.Int16[],System.Double[])">
            <summary>
            calculates the average NDCG given the scores array
            For performance reason it duplicates some
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.SortRankingResults(System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],System.Double[])">
            <summary>
            Orders the queries based on the given comparer.
            </summary>
            <param name="labels">The label for all query URL pairs</param>
            <param name="threadIndex">Specifies the thread which is executing this code</param>
            <param name="scoreBegin">position of the first query-URL pair to sort in the score array</param>
            <param name="labelBegin">position of the first query-URL pair to sort in the label array</param>
            <param name="count">number of query-URL pairs</param>
            <param name="permutation">resulting query order array</param>
            <param name="scores">The scores for all query URL pairs</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DcgCalculator.OrderingFromScores(Microsoft.ML.Trainers.FastTree.Dataset,System.Double[])">
            <summary>
            Calculates the order of documents. This returns an array with as many elements
            as there are documents, where the subarray in a query's boundary will contain
            elements from 0 up to but not including the number of documents in the query.
            The first value in this subarray will contain the index of the document in the
            subarray at top position (highest ranked), and the last value the index of the
            document with bottom position (lowest ranked).
            </summary>
            <param name="dataset">The dataset over which to calculate the DCG.</param>
            <param name="scores">The scores for all documents within the dataset.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DescendingStablePessimisticPermutationComparer">
            <summary>
            Compares two integers that are indices into a vector of doubles.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DescendingStablePermutationComparer">
            <summary>
            Compares two integers that are indices into a vector of doubles.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer">
            <summary>
            Implements an HRS based comparer to sort the ranking results for the first N results.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer.#ctor(System.Int32)">
            <summary>
            Creates an instance of the DescendingStableIdealComparer for the TOP N query/URL pairs
            </summary>
            <param name="comparefirstN">Specifies the TOP N query/URL pairs which should be used for  sorting</param>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer.CompareFirstN">
            <summary>
            Specifies the TOP N query/URL pairs which should be used for  sorting
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer.Labels">
            <summary>
            The HRS labels for all query/URL pairs
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer.LabelsOffset">
            <summary>
            The position inside the Labels where the this query starts for which the URLs should be reshuffled.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DescendingStableIdealComparer.System#Collections#Generic#IComparer{System#Int32}#Compare(System.Int32,System.Int32)">
            <summary>
            Compare two HRS ratings for query/URL pairs
            </summary>
            <param name="x">position for query/URL pair 1</param>
            <param name="y">position for query/URL pair 2</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="numDocuments">number of document</param>
            <param name="maxLeaves">number of leaves</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.#ctor(Microsoft.ML.Trainers.FastTree.InternalRegressionTree,Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            Constructs partitioning object based on the documents and RegressionTree splits
            NOTE: It has been optimized for speed and multiprocs with 10x gain on naive LINQ implementation
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.NumDocs">
            <summary>
            Returns the total number of documents handled by the partitioning
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.Initialize">
            <summary>
            Resets the data structure, as if it was newly created
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.GetDistribution(System.Double[],System.Double[],System.Int32,System.Random,System.Int32,System.Double[]@)">
            <summary>
            Does sampling with replacement on each leaf node and returns leaf count times of sample labels.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.Split(System.Int32,Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer,System.UInt32,System.Int32)">
            <summary>
            Splits the documents of a specified leaf to its two children based on a feature and a threshold value
            </summary>
            <param name="leaf">the leaf being split</param>
            <param name="indexer"></param>
            <param name="threshold">the threshold</param>
            <param name="gtChildIndex">Index of child node that contains documents whose split
            feature value is greater than the split threshold</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.Split(System.Int32,Microsoft.ML.Trainers.FastTree.IntArray,System.Collections.Generic.HashSet{System.Int32},System.Int32)">
            <summary>
            Splits the documents of a specified leaf to its two children based on a feature and a threshold value
            </summary>
            <param name="leaf">the leaf being split</param>
            <param name="bins">Split feature flock's bin</param>
            <param name="categoricalIndices">Categorical feature indices</param>
            <param name="gtChildIndex">Index of child node that contains documents whose split
            feature value is greater than the split threshold</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.GetLeafDocumentPartitions(System.Int32,Microsoft.ML.Trainers.FastTree.IIntArrayForwardIndexer,System.UInt32,System.Int32[]@,System.Int32@,System.Int32[]@,System.Int32@)">
            <summary>
            Get the document partitions of a specified leaf if it is split based on a feature and a threshold value.
            </summary>
            <param name="leaf">the leaf being split</param>
            <param name="indexer">the indexer to access the feature value</param>
            <param name="threshold">the threshold</param>
            <param name="leftDocuments">[out] the left documents split from the leaf</param>
            <param name="leftDocumentSize">[out] the size of left documents</param>
            <param name="rightDocuments">[out] the right documents split from the leaf</param>
            <param name="rightDocumentSize">[out] the size of right documents</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.DocumentsInLeaf(System.Int32)">
            <summary>
            Returns an enumeration of the document indices associated with a specified leaf, in ascending order
            </summary>
            <param name="leaf">the leaf index</param>
            <returns>the enumeration</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.NumDocsInLeaf(System.Int32)">
            <summary>
            How many documents are associated with a specified leaf
            </summary>
            <param name="leaf">the leaf</param>
            <returns>the number of documents</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.Mean(System.Double[],System.Int32,System.Boolean)">
            <summary>
            Calculates the mean of a double array only on the elements that correspond to a specified leaf in the tree
            </summary>
            <param name="array">the double array</param>
            <param name="leaf">the leaf index</param>
            <param name="filterZeros"></param>
            <returns>the mean</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.DocumentPartitioning.Mean(System.Double[],System.Double[],System.Int32,System.Boolean)">
            <summary>
            Calculates the weighted mean of a double array only on the elements that correspond to a specified leaf in the tree
            </summary>
            <param name="array">the double array</param>
            <param name="sampleWeights">Weights of array elements</param>
            <param name="leaf">the leaf index</param>
            <param name="filterZeros"></param>
            <returns>the mean</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase">
            <summary>
            Early stopping rule used to terminate training process once meeting a specified criterion.
            Used for setting <see cref="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingRule"/> <see cref="P:Microsoft.ML.Trainers.FastTree.BoostedTreeOptions.EarlyStoppingRule"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            Check if the learning should stop or not.
            </summary>
            <param name="validationScore">A non negative number. Higher score means better result unless "_lowerIsBetter" is true.</param>
            <param name="trainingScore">A non negative number. Higher score means better result unless "_lowerIsBetter" is true.</param>
            <param name="isBestCandidate">True if the current result is the best ever.</param>
            <returns>If true, the learning should stop.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.#ctor">
            <summary>
            Having <see langword="private protected"/> constructor without parameter prevents derivations of <see cref="T:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase"/> from being
            implemented by the public.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.BuildFactory">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.IEarlyStoppingCriterionFactory"/> for supporting legacy infra built upon <see cref="T:Microsoft.ML.Runtime.IComponentFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.EarlyStoppingRule.LowerIsBetter">
            <summary>
            It's <see langword="true"/> if the selected stopping metric should be as low as possible, and <see langword="false"/> otherwise.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRule.#ctor">
            <summary>
            Lazy constructor. It doesn't initialize anything because in runtime, <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRule.#ctor(System.Boolean)"/> will be
            called inside the training process to initialize needed fields.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRule.CheckBestScore(System.Single)">
            <summary>
            Check if the given score is the best ever. The best score will be stored at this._bestScore.
            </summary>
            <param name="score">The latest score</param>
            <returns>True if the given score is the best ever.</returns>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TolerantEarlyStoppingRule.Threshold">
            <summary>
            The upper bound of the indicated metric on validation set.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TolerantEarlyStoppingRule.#ctor(System.Single)">
            <summary>
            Create a rule which may terminate the training process if validation score exceeds <paramref name="threshold"/> compared with
            the best historical validation score.
            </summary>
            <param name="threshold">The maximum difference allowed between the (current) validation score and its best historical value.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TolerantEarlyStoppingRule.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            See <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.MovingWindowRule.Threshold">
            <summary>
            A threshold in range [0, 1].
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.MovingWindowRule.WindowSize">
            <summary>
            The number of historical validation scores considered when determining if the training process should stop.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.MovingWindowRule.GetRecentAvg(System.Collections.Generic.Queue{System.Single})">
            <summary>
            Calculate the average score in the given list of scores.
            </summary>
            <returns>The moving average.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.MovingWindowRule.GetRecentBest(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Get the best score in the given list of scores.
            </summary>
            <param name="recentScores">The list of scores.</param>
            <returns>The best score.</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GeneralityLossRule">
            <summary>
            Loss of Generality (GL).
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.GeneralityLossRule.Threshold">
            <summary>
            The maximum gap (in percentage such as 0.01 for 1% and 0.5 for 50%) between the (current) validation
            score and its best historical value.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GeneralityLossRule.#ctor(System.Single)">
            <summary>
            Create a rule which may terminate the training process in case of loss of generality. The loss of generality means
            the specified score on validation start increasing.
            </summary>
            <param name="threshold">The maximum gap (in percentage such as 0.01 for 1% and 0.5 for 50%) between the (current) validation
            score and its best historical value.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GeneralityLossRule.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            See <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.LowProgressRule">
            <summary>
            Low Progress (LP).
            This rule fires when the improvements on the score stall.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LowProgressRule.#ctor(System.Single,System.Int32)">
            <summary>
            Create a rule which may terminate the training process when the improvements in terms of validation score is slow.
            It will terminate the training process if the average of the recent <see cref="P:Microsoft.ML.Trainers.FastTree.MovingWindowRule.WindowSize"/> validation scores
            is worse than the best historical validation score.
            </summary>
            <param name="threshold">The maximum gap (in percentage such as 0.01 for 1% and 0.5 for 50%) between the (current) averaged validation
            score and its best historical value.</param>
            <param name="windowSize">See <see cref="P:Microsoft.ML.Trainers.FastTree.MovingWindowRule.WindowSize"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LowProgressRule.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            See <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.GeneralityToProgressRatioRule">
            <summary>
            Generality to Progress Ratio (PQ).
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GeneralityToProgressRatioRule.#ctor(System.Single,System.Int32)">
            <summary>
            Create a rule which may terminate the training process when generality-to-progress ratio exceeds <paramref name="threshold"/>.
            </summary>
            <param name="threshold">The maximum ratio gap (in percentage such as 0.01 for 1% and 0.5 for 50%).</param>
            <param name="windowSize">See <see cref="P:Microsoft.ML.Trainers.FastTree.MovingWindowRule.WindowSize"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.GeneralityToProgressRatioRule.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            See <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.ConsecutiveGeneralityLossRule">
            <summary>
            Consecutive Loss in Generality (UP).
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.ConsecutiveGeneralityLossRule.WindowSize">
            <summary>
            The number of historical validation scores considered when determining if the training process should stop.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.ConsecutiveGeneralityLossRule.#ctor(System.Int32)">
            <summary>
            Creates a rule which terminates the training process if the validation score is not improved in <see cref="P:Microsoft.ML.Trainers.FastTree.ConsecutiveGeneralityLossRule.WindowSize"/> consecutive iterations.
            </summary>
            <param name="windowSize">Number of training iterations allowed to have no improvement.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.ConsecutiveGeneralityLossRule.CheckScore(System.Single,System.Single,System.Boolean@)">
            <summary>
            See <see cref="M:Microsoft.ML.Trainers.FastTree.EarlyStoppingRuleBase.CheckScore(System.Single,System.Single,System.Boolean@)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.LassoBasedEnsembleCompressor">
            <summary>
            This implementation is based on:
            Friedman, J., Hastie, T. and Tibshirani, R. (2008) Regularization
            Paths for Generalized Linear Models via Coordinate Descent.
            https://www-stat.stanford.edu/~hastie/Papers/glmnet.pdf
            </summary>
            <remarks>Author was Yasser Ganjisaffar during his internship.</remarks>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.GradientDescent._numberOfDroppedTrees">
            number of trees dropped in this iteration
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.IGradientAdjuster">
            <summary>
            Interface for wrapping with weights of gradient target values
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IGradientAdjuster.AdjustTargetAndSetWeights(System.Double[],Microsoft.ML.Trainers.FastTree.ObjectiveFunctionBase,System.Double[]@)">
            <summary>
            Create wrapping of gradient target values
            </summary>
            <param name="gradient"></param>
            <param name="objFunction">Objective functions can be used for constructing weights</param>
            <param name="targetWeights"></param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.RandomForestOptimizer">
            <summary>
            This is dummy optimizer. As Random forest does not have any boosting based optimization, this is place holder to be consistent
            with other fast tree based applications
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.OptimizationAlgorithm.SmoothTree(Microsoft.ML.Trainers.FastTree.InternalRegressionTree,System.Double)">
            <summary>
            Regularize a regression tree with smoothing paramter alpha.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.SignatureParallelTrainer">
            <summary>
            Signature of Parallel trainer.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FindBestThresholdFromRawArrayFun">
            <summary>
            delegate function. This function is implemented in TLC, and called by TLC++. It will find best threshold
            from raw histogram data (countByBin, sumTargetsByBin, sumWeightsByBin, numDocsInLeaf, sumTargets, sumWeights)
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.IParallelTraining">
            <summary>
            Interface used for parallel training.
            Mainly contains three parts:
            1. interactive with IO: <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GetLocalBinConstructionFeatures(System.Int32)" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.SyncGlobalBoundary(System.Int32,System.Int32,System.Double[][])" />.
               Data will be partitioned by rows in Data parallel and Voting Parallel.
               To speed up the find bin process, it let different workers to find bins for different features.
               Then perform global sync up.
               In Feature parallel, every machines holds all data, so this is unneeded.
            2. interactive with TreeLearner: <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.InitIteration(System.Boolean[]@)" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.SufficientStatsBase,System.Boolean)" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsNeedFindLocalBestSplit" />,
                   <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsSkipNonSplittableHistogram" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FindGlobalBestSplit(Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo[])" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo)" />.
               A full process is:
                   Use <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.InitIteration(System.Boolean[]@)" /> to alter local active features.
                   Use <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)" /> to check smaller leaf and larger leaf.
                   Use <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.SufficientStatsBase,System.Boolean)" />, <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsNeedFindLocalBestSplit" /> and <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsSkipNonSplittableHistogram" /> to interactive with Feature histograms.
                   Use <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FindGlobalBestSplit(Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo[])" /> to sync up global best split
                   Use <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo)" /> to record global num_data in leaves.
            3. interactive with Application : <see cref="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GlobalMean(Microsoft.ML.Trainers.FastTree.Dataset,Microsoft.ML.Trainers.FastTree.InternalRegressionTree,Microsoft.ML.Trainers.FastTree.DocumentPartitioning,System.Double[],System.Boolean)" />.
               Output of leaves is calculated by newton step ( - sum(first_order_gradients) / sum(second_order_gradients)).
               If data is partitioned by row, it needs to a sync up for these sum result.
               So It needs to call this to get the real output of leaves.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.InitEnvironment">
            <summary>
            Initialize the network connection.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FinalizeEnvironment">
            <summary>
            Finalize the network.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.InitTreeLearner(Microsoft.ML.Trainers.FastTree.Dataset,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Initialize once while construct tree learner.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FinalizeTreeLearner">
            <summary>
            Finalize while tree learner is freed.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.InitIteration(System.Boolean[]@)">
            <summary>
            Initialize every time before training a tree.
            will alter activeFeatures in Feature parallel.
            Because it only need to find threshold for part of features in feature parallel.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FinalizeIteration">
            <summary>
            Finalize after trained one tree.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.CacheHistogram(System.Boolean,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.SufficientStatsBase,System.Boolean)">
            <summary>
            Cache Histogram, it will be used for global aggregate.
            Only used in Data parallel and Voting Parallel
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsNeedFindLocalBestSplit">
            <summary>
            Only return False in Data parallel.
            Data parallel find best threshold after merged global histograms.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.IsSkipNonSplittableHistogram">
            <summary>
            True if need to skip non-splittable histogram.
            Only will return False in Voting parallel.
            That is because local doesn't have global histograms in Voting parallel,
            So the information about NonSplittable is not correct, and we cannot skip it.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.FindGlobalBestSplit(Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,Microsoft.ML.Trainers.FastTree.FindBestThresholdFromRawArrayFun,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo[])">
            <summary>
            Find best split among machines.
            will save result in bestSplits.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GetGlobalDataCountInLeaf(System.Int32,System.Int32@)">
            <summary>
            Get global num_data on specific leaf.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.PerformGlobalSplit(System.Int32,System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo)">
            <summary>
            Used to record the global num_data on leaves.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GlobalMean(Microsoft.ML.Trainers.FastTree.Dataset,Microsoft.ML.Trainers.FastTree.InternalRegressionTree,Microsoft.ML.Trainers.FastTree.DocumentPartitioning,System.Double[],System.Boolean)">
            <summary>
            Get Global mean on different machines for data partitioning in tree.
            Used for calculating leaf output value.
            will return a array this is the mean output of all leaves.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.GetLocalBinConstructionFeatures(System.Int32)">
            <summary>
            Get indices of features that should be find bin in local.
            After construct local boundary, should call <see href="SyncGlobalBoundary" />
            to get boundaries for all features.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.IParallelTraining.SyncGlobalBoundary(System.Int32,System.Int32,System.Double[][])">
            <summary>
            Sync Global feature bucket.
            used in Data parallel and Voting parallel.
            Data are partitioned by row. To speed up the Global find bin process,
            we can let different workers construct Bin Boundary for different features,
            then perform a global sync up.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TestResult.RawValue">
            <summary>
            Raw value used for calculating final test result value.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TestResult.Factor">
            <summary>
            The factor used for calculating final test result value.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TestResult.Operator">
            <summary>
            The operator used for calculating final test result value.
            Final value = Operator(RawValue, Factor)
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TestResult.LowerIsBetter">
            <summary>
            Indicates that the lower value of this metric is better
            This is used for early stopping (with TestHistory and TestWindowWithTolerance)
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.RegressionTest.#ctor(Microsoft.ML.Trainers.FastTree.ScoreTracker,System.Nullable{System.Int32})">
            <param name="scoreTracker"></param>
             <param name="resultType">1: L1, 2: L2. Otherwise, return all.</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner">
            <summary>
            Trains regression trees.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.#ctor(Microsoft.ML.Trainers.FastTree.Dataset,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Boolean,System.Boolean,System.Double,System.Int32,System.Int32,System.Double,Microsoft.ML.Trainers.FastTree.IParallelTraining,System.Double,Microsoft.ML.Trainers.FastTree.Bundle,System.Int32,System.Double,Microsoft.ML.Runtime.IHost)">
            <summary>
            Creates a new LeastSquaresRegressionTreeLearner
            </summary>
            <param name="trainData">Data to train from</param>
            <param name="numLeaves">Maximum leaves in tree</param>
            <param name="minDocsInLeaf">Minimum allowable documents in leaf</param>
            <param name="entropyCoefficient">Add the information gain of a split to the gain
            times this value. Practically, this will favor more balanced splits</param>
            <param name="featureFirstUsePenalty">Features never used before effectively
            have this amount subtracted from their gain</param>
            <param name="featureReusePenalty">Features used before effectively have
            this amount subtracted from their gain</param>
            <param name="softmaxTemperature">Regularization parameter, where we become
            increasingly likely to select a non-optimal split feature the higher the
            temperature is</param>
            <param name="histogramPoolSize">Number of feature histograms to cache</param>
            <param name="randomSeed">The seed to use for sampling</param>
            <param name="splitFraction"></param>
            <param name="filterZeros">Whether we should ignore zero lambdas for the
            purpose of tree learning (generally a bad idea except for when zero indicates
            that the document should be ignored)</param>
            <param name="allowEmptyTrees">If false, failure to split the root will result in error, or if
            true will result in null being returned when we try to fit a tree</param>
            <param name="gainConfidenceLevel">Only consider a gain if its likelihood versus a random
            choice gain is above a certain value (so 0.95 would mean restricting to gains that have less
            than a 0.05 change of being generated randomly through choice of a random split).</param>
            <param name="maxCategoricalGroupsPerNode">Maximum categorical split points to consider when splitting on a
            categorical feature.</param>
            <param name="maxCategoricalSplitPointPerNode"></param>
            <param name="bsrMaxTreeOutput">-1 if best step ranking is to be disabled, otherwise it
            is interpreted as being similar to the maximum output for a leaf</param>
            <param name="parallelTraining"></param>
            <param name="minDocsPercentageForCategoricalSplit"></param>
            <param name="bundling"></param>
            <param name="minDocsForCategoricalSplit"></param>
            <param name="bias"></param>
            <param name="host">Host</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FitTargets(Microsoft.ML.Runtime.IChannel,System.Boolean[],System.Double[])">
            <summary>
            Learns a new tree for the current outputs
            </summary>
            <returns>A regression tree</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.Initialize(System.Boolean[])">
            <summary>
            Clears data structures
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FindBestSplitOfRoot(System.Double[])">
            <summary>
            finds best feature/threshold split of root node. Fills in BestSplitInfoPerLeaf[0]
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FindBestSplitOfSiblings(System.Int32,System.Int32,Microsoft.ML.Trainers.FastTree.DocumentPartitioning,System.Double[])">
            <summary>
            Finds best feature/threshold split of <paramref name="lteChild"/> and <paramref name="gtChild"/>,
            and fills in the corresponding elements of <see cref="F:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.BestSplitInfoPerLeaf"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FindAndSetBestFeatureForLeaf(Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates)">
            <summary>
            After the gain for each feature has been computed, this function chooses the gain maximizing feature
            and sets its info in the right places
            This method is overridden in MPI version of the code
            </summary>
            <param name="leafSplitCandidates">the FindBestThesholdleafSplitCandidates data structure that contains the best split information</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FindBestThresholdForFlockThreadWorker(System.Int32)">
            <summary>
            The multithreading entry-point: finds the best threshold for a given flock at a given leaf.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.GetActiveFeatures(System.Int32,System.Int32)">
            <summary>
            Returns the set of features that are active within a particular range.
            </summary>
            <param name="min">The inclusive lower bound of the feature indices</param>
            <param name="lim">The exclusive upper bound of the feature indices</param>
            <returns>The feature indices within the range that are active</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.GetLeafSplitGain(System.Int32,System.Double,System.Double)">
            <summary>
            Returns the split gain for a particular leaf. Used on two leaves to calculate
            the squared error gain for a particular leaf.
            </summary>
            <param name="count">Number of documents in this leaf</param>
            <param name="sumTargets">Sum of the target values for this leaf</param>
            <param name="sumWeights">Sum of the weights for this leaf, not meaningful if
            <see cref="P:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.HasWeights"/> is <c>false</c></param>
            <returns>The gain in least squared error</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.CalculateSplittedLeafOutput(System.Int32,System.Double,System.Double)">
            <summary>
            Calculates the output value for a leaf after splitting.
            </summary>
            <param name="count">Number of documents in this leaf</param>
            <param name="sumTargets">Sum of the target values for this leaf</param>
            <param name="sumWeights">Sum of the weights for this leaf, not meaningful if
            <see cref="P:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.HasWeights"/> is <c>false</c></param>
            <returns>The output value for a leaf</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.FindBestThresholdFromHistogram(Microsoft.ML.Trainers.FastTree.SufficientStatsBase,Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates,System.Int32)">
            <summary>
            Finds the best threshold to split on, and sets the appropriate values in the LeafSplitCandidates data structure.
            </summary>
            <param name="histogram">The sufficient stats accumulated for the flock</param>
            <param name="leafSplitCandidates">The LeafSplitCandidates data structure</param>
            <param name="flock">The index of the flock containing this feature</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates">
            <summary>
            Contains the memory data structures required for finding the best threshold for a given
            feature at a given leaf.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates.Initialize(System.Int32,Microsoft.ML.Trainers.FastTree.DocumentPartitioning,System.Double[],System.Double[],System.Boolean)">
            <summary>
            Initializes the object for a specific leaf, with a certain subset of documents.
            </summary>
            <param name="leafIndex">The leaf index</param>
            <param name="partitioning">The partitioning object that knows which documents have reached that leaf</param>
            <param name="targets">The array of targets, which the regression tree is trying to fit</param>
            <param name="weights">The array of weights for the document</param>
            <param name="filterZeros">Whether filtering of zero gradients was turned on or not</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates.Initialize(System.Double[],System.Double[],System.Boolean)">
            <summary>
            Initializes the object for computing the root node split
            </summary>
            <param name="targets">the array of targets, which the regression tree is trying to fit</param>
            <param name="weights"></param>
            <param name="filterZeros"></param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.LeafSplitCandidates.Initialize">
            <summary>
            Initializes the object to do nothing
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner.SplitInfo">
            <summary>
            A struct to store information about each leaf for splitting
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeLearner.GetSizeOfReservedMemory">
            <summary>
            Get size of reserved memory for the tree learner.
            The default implementation returns 0 directly, and the subclasses can return
            different value if it reserves memory for training.
            </summary>
            <returns>size of reserved memory</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeLearnerException">
            <summary>
            An exception class for an error which occurs in the midst of learning a tree.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.WinLossCalculator.#ctor(System.Int32,System.String)">
            <summary>
            Constructs a WinLoss calculator
            </summary>
            <param name="maxDocsPerQuery">the maximum number of documents per query</param>
            <param name="sortingAlgorithm">a string describing the sorting algorithm to use</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.WinLossCalculator.WinLossRangeFromScores(Microsoft.ML.Trainers.FastTree.Dataset,System.Int16[],System.Double[])">
            <summary>
            calculates the average WinLoss given the scores array
            For performance reason it duplicates some
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1">
            <summary>
            A list of <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/>'s derived class. To compute the output value of a
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1"/>, we need to compute the output values of all trees in <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees"/>,
            scale those values via <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.TreeWeights"/>, and finally sum the scaled values and <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Bias"/> up.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Bias">
            <summary>
            When doing prediction, this is a value added to the weighted sum of all <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees"/>' outputs.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.TreeWeights">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.TreeWeights"/>[i] is the i-th <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/>'s weight in <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees">
            <summary>
            <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees"/>[i] is the i-th <see cref="T:Microsoft.ML.Trainers.FastTree.RegressionTreeBase"/> in <see cref="P:Microsoft.ML.Trainers.FastTree.TreeEnsemble`1.Trees"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase">
            <summary>
            This class encapsulates the common behavior of all tree-based featurizers such as <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>,
            <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>, <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>,
            <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>, and <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>.
            All tree-based featurizers share the same output schema computed by <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.GetOutputSchema(Microsoft.ML.SchemaShape)"/>. All tree-based featurizers
            requires an input feature column name and a suffix for all output columns. The <see cref="T:Microsoft.ML.ITransformer"/> returned by <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.Fit(Microsoft.ML.IDataView)"/>
            produces three columns: (1) the prediction values of all trees, (2) the IDs of leaves the input feature vector falling into, and (3)
            the binary vector which encodes the paths to those destination leaves.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase">
            <summary>
            The common options of tree-based featurizations such as <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>, <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>,
            <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>, <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>, and <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.InputColumnName">
            <summary>
            The name of feature column in the <see cref="T:Microsoft.ML.IDataView"/> when calling <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.Fit(Microsoft.ML.IDataView)"/>.
            The column type must be a vector of <see cref="T:System.Single"/>. The column called <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.InputColumnName"/> would be mapped
            to columns called <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName"/>, <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName"/>, and <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName"/> in the output
            of <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase"/> and its derived classes. Note that <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.FeatureColumnName"/> is not
            necessary to be the same as the feature column used to train the underlying tree model.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName">
            <summary>
            The name of the column that stores the prediction values of all trees. Its type is a vector of <see cref="T:System.Single"/>
            and the i-th vector element is the prediction value predicted by the i-th tree.
            If <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName">
            <summary>
            The 0-1 encoding of all leaf nodes' IDs. Its type is a vector of <see cref="T:System.Single"/>. If the given feature
            vector falls into the first leaf of the first tree, the first element in the 0-1 encoding would be 1.
            If <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName">
            <summary>
            The 0-1 encoding of the paths to the leaves. If the path to the first tree's leaf is node 1 (2nd node in the first tree),
            node 3 (4th node in the first tree), and node 5 (6th node in the first tree), the 2nd, 4th, and 6th element in that encoding
            would be 1.
            If <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.FeatureColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.InputColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.TreesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.LeavesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.PathsColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.Env">
            <summary>
            Environment of this instance. It controls error throwing and other environment settings.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.PrepareModel(Microsoft.ML.IDataView)">
            <summary>
            All derived class should implement <see cref="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.PrepareModel(Microsoft.ML.IDataView)"/> to tell how to get a <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>
            out from <paramref name="input"/> and parameters inside this or derived classes.
            </summary>
            <param name="input">Data used to train a tree model.</param>
            <returns>The trees used in <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer"/>.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.Fit(Microsoft.ML.IDataView)">
            <summary>
            Produce a <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> which maps the column called <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.InputColumnName"/> in <paramref name="input"/>
            to three output columns.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/> adds three float-vector columns into <paramref name="inputSchema"/>.
            Given a feature vector column, the added columns are the prediction values of all trees, the leaf IDs the feature
            vector falls into, and the paths to those leaves.
            </summary>
            <param name="inputSchema">A schema which contains a feature column. Note that feature column name can be specified
            by <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.InputColumnName"/>.</param>
            <returns>Output <see cref="T:Microsoft.ML.SchemaShape"/> produced by <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>.</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> which contains a pre-trained <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> and calling its
             <see cref="M:Microsoft.ML.IEstimator`1.Fit(Microsoft.ML.IDataView)"/> produces a featurizer based on the pre-trained model.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             ### Input and Output Columns
            
             The input label column data must be<xref:System.Single>.
             The input features column data must be a known-sized vector of<xref:System.Single>.
            
             This estimator outputs the following columns:
            
             | Output Column Name | Column Type | Description|
             | -- | -- | -- |
             | `Trees` | Vector of<xref:System.Single> | The output values of all trees. |
             | `Leaves` | Vector of <xref:System.Single> | The IDs of all leaves where the input feature vector falls into. |
             | `Paths` | Vector of <xref:System.Single> | The paths the input feature vector passed through to reach the leaves. |
            
             Those output columns are all optional and user can change their names.
             Please set the names of skipped columns to null so that they would not be produced.
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByPretrainTreeEnsemble(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options"/> of <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/> as
            used when calling <see cref="M:Microsoft.ML.TreeExtensions.FeaturizeByPretrainTreeEnsemble(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options.ModelParameters">
            <summary>
            The pretrained tree model used to do tree-based featurization. Note that <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> contains a collection of decision trees.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.PrepareModel(Microsoft.ML.IDataView)">
            <summary>
            Produce the <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> for tree-based feature engineering. This function does not
            invoke training procedure and just returns the pre-trained model passed in via <see cref="F:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options.ModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-binary-classification.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeBinary(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-regression.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeRegression(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-binary-classification.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastForestBinary(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-regression.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastForestRegression(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-ranking.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeRanking(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator">
             <summary>
             A <see cref="T:Microsoft.ML.IEstimator`1"/> to transform input feature vector to tree-based features.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/io-columns-tree-featurization-regression.md)]
            
             [!include[algorithm](~/../docs/samples/docs/api-reference/tree-featurization-prediction.md)]
            
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeTweedie(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator.Options)"/>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator.Options">
            <summary>
            Options for the <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator.Options.TrainerOptions">
            <summary>
            The configuration of <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> used to train the underlying <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting any derived class of <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase"/>.
            The derived classes include, for example, <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._treesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._leavesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._pathsColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer.CheckFeatureColumnCompatibility(Microsoft.ML.DataViewSchema.Column)">
            <summary>
            Check if <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._featureDetachedColumn"/> is compatible with <paramref name="inspectedFeatureColumn"/>.
            </summary>
            <param name="inspectedFeatureColumn">A column checked against <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._featureDetachedColumn"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer.MakeFeatureRoleMappedSchema(Microsoft.ML.DataViewSchema)">
            <summary>
            Create <see cref="T:Microsoft.ML.Data.RoleMappedSchema"/> from <paramref name="schema"/> by using <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer._featureDetachedColumn"/> as the feature role.
            </summary>
            <param name="schema">The original schema to be mapped.</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer.GetOutputSchema(Microsoft.ML.DataViewSchema)">
            <summary>
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationTransformer"/> appends three columns to the <paramref name="inputSchema"/>.
            The three columns are all <see cref="T:System.Single"/> vectors. The fist column stores the prediction values of all trees and
            its default name is "Trees". The second column (default name: "Leaves") contains leaf IDs where the given feature vector falls into.
            The third column (default name: "Paths") encodes the paths to those leaves via a 0-1 vector.
            </summary>
            <param name="inputSchema"><see cref="T:Microsoft.ML.DataViewSchema"/> of the data to be transformed.</param>
            <returns><see cref="T:Microsoft.ML.DataViewSchema"/> of the transformed data if the input schema is <paramref name="inputSchema"/>.</returns>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree._labelsDistribution">
            <summary>
            Holds the labels of sampled instances for this tree. This value can be null when training, for example, random forest (FastForest).
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree._instanceWeights">
            <summary>
            Holds the weights of sampled instances for this tree. This value can be null when training, for example, random forest (FastForest).
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree.LoadSampledLabels(Microsoft.ML.Data.VBuffer{System.Single}@,System.Single[],System.Single[],System.Int32,System.Int32)">
            <summary>
            Loads the sampled labels of this tree to the distribution array for the sparse instance type.
            By calling for all the trees, the distribution array will have all the samples from all the trees
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalQuantileRegressionTree.ExtractLeafSamplesAndTheirWeights(System.Double[][]@,System.Double[][]@)">
            <summary>
            Copy training examples' labels and their weights to external variables.
            </summary>
            <param name="leafSamples">List of label collections. The type of a collection is a double array. The i-th label collection contains training examples' labels falling into the i-th leaf.</param>
            <param name="leafSampleWeights">List of labels' weight collections. The type of a collection is a double array. The i-th collection contains weights of labels falling into the i-th leaf.
            Specifically, leafSampleWeights[i][j] is the weight of leafSamples[i][j].</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree">
            Note that <see cref="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree"/> is shared between FastTree and LightGBM assemblies,
            so <see cref="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree"/> has <see cref="T:Microsoft.ML.BestFriendAttribute"/>.
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalRegressionTree._previousLeafValue">
            <summary>
            The value of this non-leaf node, prior to split when it was a leaf.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.CategoricalSplit">
            <summary>
            Indicates if a node's split feature was categorical.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.CategoricalSplitFeatures">
            <summary>
            Array of categorical values for the categorical feature that might be chosen as
            a split feature for a node.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.CategoricalSplitFeatureRanges">
            <summary>
            For a given categorical feature that is chosen as a split feature for a node, this
            array contains its start and end range in the input feature vector at prediction time.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.TreeType">
            <summary>
            Code to identify the type of tree in binary serialization. These values are
            persisted, so they should remain consistent for the sake of deserialization
            backwards compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.#ctor(System.Int32)">
            <summary>
            constructs a regression tree with an upper bound on depth
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.Create(System.Int32,System.Int32[],System.Double[],System.Single[],System.Single[],System.Int32[],System.Int32[],System.Double[],System.Int32[][],System.Boolean[])">
            <summary>
            Create a Regression Tree object from raw tree contents.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumLeaves">
            <summary>
            The current number of leaves in the tree.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumNodes">
            <summary>
            The current number of nodes in the tree. This doesn't include the number of leaves. For example, a tree,
                    node0
                    /  \
                node1 leaf3
                /  \
            leaf1 leaf2
            <see cref="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumNodes"/> and <see cref="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumLeaves"/> should be 2 and 3, respectively.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.MaxNumLeaves">
            <summary>
            The maximum number of leaves the internal structure of this tree can support.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.MaxNumNodes">
            <summary>
            The maximum number of nodes this tree can support.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.Weight">
            <summary>
            Weight of this tree in an <see cref="T:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetLteChildForNode(System.Int32)">
            <summary>
            Retrieve the less-than-threshold child node of the specified parent node.
            </summary>
            <param name="node">A 0-based index to specify a parent node. This value should be smaller than <see cref="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumNodes"/>.</param>
            <returns>A child node's index of the specified node.</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.LeafValue(System.Int32)">
            <summary>
            Return the prediction value learned at the specified leaf node.
            </summary>
            <param name="leaf">A 0-based index to specify a leaf node. This value should be smaller than <see cref="P:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.NumLeaves"/>.</param>
            <returns>The value associated with the specified leaf</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.ScaleOutputsBy(System.Double)">
            <summary>
            Scales all of the output values at the leaves of the tree by a given scalar
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetOutput(Microsoft.ML.Trainers.FastTree.Dataset.RowForwardIndexer.Row)">
            <summary>
            Evaluates the regression tree on a given document.
            </summary>
            <param name="featureBins"></param>
            <returns>the real-valued regression tree output</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetOutput(System.Int32[])">
            <summary>
            evaluates the regression tree on a given binnedinstance.
            </summary>
            <param name="binnedInstance">A previously binned instance/document</param>
            <returns>the real-valued regression tree output</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetLeafFrom(Microsoft.ML.Data.VBuffer{System.Single}@,System.Int32)">
            <summary>
            Returns leaf index the instance falls into, if we start the search from the <paramref name="root"/> node.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetLeaf(Microsoft.ML.Data.VBuffer{System.Single}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Returns the leaf node for the given feature vector, and populates 'path' with the list of internal nodes in the
            path from the root to that leaf. If 'path' is null a new list is initialized. All elements in 'path' are cleared
            before filling in the current path nodes.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.GetOutputs(Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            returns the hypothesis output for an entire dataset
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.Split(System.Int32,System.Int32,System.Int32[],System.Int32[],System.Boolean,System.UInt32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Turns a leaf of the tree into an interior node with two leaf-children.
            </summary>
            <param name="leaf">The index of the leaf to split.</param>
            <param name="feature">The index of the feature used to split this leaf (as
            it indexes the array of DerivedFeature instances passed to the to tree ensemble format).</param>
            <param name="categoricalSplitFeatures">Thresholds for categorical split.</param>
            <param name="categoricalSplitRange"></param>
            <param name="categoricalSplit"></param>
            <param name="threshold">The </param>
            <param name="lteValue">The value of the leaf on the LTE side.</param>
            <param name="gtValue">The value of the leaf on the GT side.</param>
            <param name="gain">The splitgain of this split. This does not
            affect the logic of the tree evaluation.</param>
            <param name="gainPValue">The p-value associated with this split,
            indicating confidence that this is a better than random split.
            This does not affect the logic of the tree evaluation.</param>
            <returns>Returns the node index</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.ToTreeEnsembleFormat(System.Text.StringBuilder,System.Text.StringBuilder,Microsoft.ML.Trainers.FastTree.FeaturesToContentMap,System.Int32@,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            Returns a representation of the tree in the production
            decision tree format (SHAREDDYNAMICRANKROOT\TreeEnsembleRanker\Tree.h).
            The intent is that this
            </summary>
            <param name="sbEvaluator">Append the new evaluator to this stringbuilder.</param>
            <param name="sbInput">Append any hitherto unused [Input:#] sections
            to this stringbuilder.</param>
            <param name="featureContents">The feature to content map.</param>
            <param name="evaluatorCounter">A running count of evaluators. When
            this method returns it should have one more entry.</param>
            <param name="featureToId">A map of feature index (in the features array)
            to the ID as it will be written in the file. This instance should be
            used for all </param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.OptimizePathToLeaf(System.Int32)">
            <summary>
            Sets the path to a leaf to be indexed by 0,1,2,3,... and sets the leaf index to 0
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalRegressionTree.SwapNodePositions(System.Int32,System.Int32)">
            <summary>
             swaps the positions of two nodes in the tree, without any functional change to the tree
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble._firstInputInitializationContent">
            <summary>
            String appended to the text representation of <see cref="T:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble"/>. This is mainly used in <see cref="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.ToTreeEnsembleIni(Microsoft.ML.Trainers.FastTree.FeaturesToContentMap,System.String,System.Boolean,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.PopulateRawThresholds(Microsoft.ML.Trainers.FastTree.Dataset)">
            <summary>
            Converts the bin based thresholds to the raw real-valued thresholds.
            To be called after training the ensemble.
            </summary>
            <param name="dataset">The dataset from which to get the bin upper bounds per feature</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.RemapFeatures(System.Int32[])">
            <summary>
            Remaps the features, to a new feature space. Is called in the event that the features
            in the training <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset"/> structure are different from the ones in the
            original pipeline (possibly due to trivialization of input features), and so need to
            be remapped back to the original space. Note that the tree once modified in this way
            will no longer have features pointing to the original training <see cref="T:Microsoft.ML.Trainers.FastTree.Dataset"/>,
            so this should be called only after <see cref="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.PopulateRawThresholds(Microsoft.ML.Trainers.FastTree.Dataset)"/> is called.
            </summary>
            <param name="oldToNewFeatures">The mapping from old original features, into the new features</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.ToTreeEnsembleIni(Microsoft.ML.Trainers.FastTree.FeaturesToContentMap,System.String,System.Boolean,System.Boolean)">
            <summary>
            returns the ensemble in the production TreeEnsemble format
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.GetFeatureContributions(Microsoft.ML.Data.VBuffer{System.Single}@,Microsoft.ML.Data.VBuffer{System.Single}@,Microsoft.ML.Data.BufferBuilder{System.Single}@)">
            <summary>
            Returns a vector of feature contributions for a given example.
            <paramref name="builder"/> is used as a buffer to accumulate the contributions across trees.
            If <paramref name="builder"/> is null, it will be created, otherwise it will be reused.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.InternalTreeEnsemble.GetMaxFeatureIndex">
            <summary>
            Retrieve the max feature index used across all node's split functions.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.FeaturesToContentMap">
            <summary>
            A class that given either a <see cref="T:Microsoft.ML.Data.RoleMappedSchema"/>
            provides a mechanism for getting the corresponding input INI content for the features.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FeaturesToContentMap.#ctor(Microsoft.ML.Data.RoleMappedSchema)">
            <summary>
            Maps input features names to their input INI content based on the metadata of the
            features column. If the <c>IniContent</c> slotwise string metadata is present, that
            is used, or else default content is derived from the slot names.
            </summary>
            <seealso cref="F:Microsoft.ML.Data.AnnotationUtils.Kinds.SlotNames"/>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Algorithms.FindFirstGE``1(``0[],``0)">
            <summary>
            Returns the index of the first array position that is larger than or equal to val
            </summary>
            <typeparam name="T">an IComparable type</typeparam>
            <param name="array">a sorted array of values</param>
            <param name="val">the value to search for</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Algorithms.FindLastLE``1(``0[],``0)">
            <summary>
            Returns the index of the last array position that is less than or equal to val
            </summary>
            <typeparam name="T">an IComparable type</typeparam>
            <param name="array">a sorted array of values</param>
            <param name="val">the value to search for</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Algorithms.TopK``1(``0[],System.Int32,System.Int32,``0[],System.Int32[])">
            <summary>
            Finds the largest k entries in an array (with offset and length)
            </summary>
            <typeparam name="T">An IComparible type</typeparam>
            <param name="array">The array being searched</param>
            <param name="offset">An offset into the array</param>
            <param name="length">The length of the search</param>
            <param name="topK">The values of the top K</param>
            <param name="topKPositions">The positions of the top K</param>
            <returns>The number of entries set in topK and topKPositions (length could be less than K)</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Algorithms.Min``1(``0[],System.Int32@)">
            <summary>
            Finds the minimum and the argmin in an array of values
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Algorithms.MergeSortedUniqued``1(``0[][])">
            <summary>
            Takes an arbitrary array of sorted uniqued IComparables and returns a sorted uniqued merge
            </summary>
            <typeparam name="T">An IComparable </typeparam>
            <param name="arrays">An array of sorted uniqued arrays</param>
            <returns>A sorted and uniqued merge</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.BlockingThreadPool">
            <summary>
            This class wraps the standard .NET ThreadPool and adds the following functionality:
            1) the user explicitly defines a maximum of concurrently running threads
            2) if the maximum is k, and k work items are already running, a call to RunOrBlock will block until a
               thread is available
            3) a work item can be any function with 6 or less arguments
            4) a work item knows the index of the thread it is running on - this can be used if the threads share \
               common resources
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BlockingThreadPool.Initialize(System.Int32)">
            <summary>
            constructor
            </summary>
            <param name="numThreads">the maximal number of concurrent threads</param>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.BufferPoolManager">
            <summary>
            This class enables basic buffer pooling.
            It supports different types of buffers and returns buffers of the requested size or larger.
            This class was implemented to reduce frequent allocation/deallocation of large buffers which caused fragmentation of the large object heap.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BufferPoolManager.MinBufferSizeInBytes">
            <summary>
            The minimum size in bytes for a buffer to be stored in the pool
            This is the minimum size in bytes for an object to be stored in the large object heap
            </summary>
        </member>
        <member name="F:Microsoft.ML.Trainers.FastTree.BufferPoolManager._bufferPools">
            <summary>
            A dictionary containing all buffer pool types
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.TakeBuffer``1(System.Int32)">
            <summary>
            Gets a buffer from the pool with at least the same size as passed as input parameter
            </summary>
            <typeparam name="T">Pool type</typeparam>
            <param name="size">Minimum size required</param>
            <returns>The buffer requested</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.ReturnBuffer``1(``0[]@)">
            <summary>
            Returns a buffer back to the pool.
            It only keeps buffers bigger than MaxBufferSizeInBytes = 85K bytes
            </summary>
            <param name="buffer">The buffer array to add to the pool of buffers</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.ReleaseAllAvailableBuffers(System.Type)">
            <summary>
            Releases all available buffers in a specific pool
            </summary>
            <param name="type">Buffer pool type</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.ReleaseAllAvailableBuffers">
            <summary>
            Releases all available buffers in all pools
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.InitializeBufferPool``1">
            <summary>
            Initializes a new buffer pool of a specific type
            </summary>
            <typeparam name="T">Type of buffer to initialize</typeparam>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.BufferPoolManager.InitializeBufferPool(System.Type)">
            <summary>
            Initializes a new buffer pool of a specific type
            </summary>
            <param name="type">Type of buffer to initialize</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.FastTreeIniFileUtils.AddCalibrationToIni(Microsoft.ML.Runtime.IHost,System.String,Microsoft.ML.Calibrators.ICalibrator)">
            <summary>
            Get the calibration summary in INI format
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.LinqExtensions.CumulativeSum``1(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            RunningLength. Converts sequence like 1, 2, 3, 4
            to  1, 3, 6, 10
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.MappedObjectPool`1">
            <summary>
            Implements a paging mechanism on indexed objects.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.MappedObjectPool`1.#ctor(`0[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ML.Trainers.FastTree.MappedObjectPool`1"/> class.
            </summary>
            <param name="pool">A pool of objects on top of which the paging mechanism is built</param>
            <param name="maxIndex">The maximal index</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.MappedObjectPool`1.Get(System.Int32,`0@)">
            <summary>
            If the given index maps to a cached object, that object is retrieved and the return value is true.
            If the index is not cached, an object from the pool is retrieved (possibly paging-out the least-recently used) and the return value is false.
            </summary>
            <param name="index">The requested index</param>
            <param name="obj">The retrieved object</param>
            <returns>true if the index was found, false if a new object was assigned from the pool</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.MappedObjectPool`1.Reset">
            <summary>
            Resets the MappedObjectPool
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.PseudorandomFunction">
            <summary>
            This class defines a pseudo-random function, mapping a number to
            a hard to predict but deterministic other number, through some
            nefarious means.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.StreamExtensions.UndisposableStream">
            <summary>
            A stream class that suppresses the dispose signal
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.StreamExtensions.ReadCompressed(System.IO.Stream)">
            <summary>
            Reads a compressed array of byte from the stream (written by WriteCompressed)
            </summary>
            <param name="stream">The stream to read from</param>
            <returns>The decompressed bytes</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes an array of bytes to the stream with compression
            </summary>
            <param name="stream">Stream to write to</param>
            <param name="array">Array to write</param>
            <param name="offset">The byte offset into the array to write</param>
            <param name="count">The number of bytes from the array to write</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.StreamExtensions.WriteCompressed(System.IO.Stream,System.Byte[])">
            <summary>
            Writes an array of bytes to the stream with compression
            </summary>
            <param name="stream">Stream to write to</param>
            <param name="array">Array to write</param>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.ThreadTaskManager.MakeTask(System.Collections.Generic.IEnumerable{System.Action})">
            <summary>
            Makes a new task using the subtasks
            </summary>
            <param name="subTasks">subtasks composing the task</param>
            <returns>An IThreadTask to run the tasks</returns>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.ThreadTaskManager.MakeTask(System.Action{System.Int32},System.Int32)">
            <summary>
            Makes a new task from the supplied action that takes an integer argument, from 0...max
            </summary>
            <param name="subTaskAction">Action to run</param>
            <param name="maxArgument">The max range of the argument</param>
            <returns>A task that runs the action using each value of the argument from 0...max</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.IThreadTask">
            <summary>
            Interface for a decomposable task that runs on many threads
            </summary>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Timer">
            <summary>
            Static class for timing events.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Timer.TimerState.ToString">
            <summary>
            Gets a string summary of the total times.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Timer.GetTicks(Microsoft.ML.Trainers.FastTree.TimerEvent)">
            <summary>
            Returns the total number of CPU ticks spent in the specified timer so far.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Timer.Time(Microsoft.ML.Trainers.FastTree.TimerEvent)">
            <summary>
            Creates a timed event which, when disposed, adds to the total time of that event type.
            </summary>
            <param name="e">The type of event</param>
            <returns>A timed event</returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.Timer.TimedEvent">
            <summary>
            An object which, when disposed, adds to the total time of that event type.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Trainers.FastTree.Timer.GetString">
            <summary>
            Gets a string summary of the total times.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.ML.Trainers.FastTree.ToByteArrayExtensions">
            <summary>
            This class contains extension methods that support binary serialization of some base C# types
            and arrays of these types.
            SizeInBytes - the number of bytes in the binary representation
            type.ToByteArray(buffer, ref position) - will write the binary representation of the type to
              the byte buffer at the given position, and will increment the position to the end of
              the representation
            byte[].ToXXX(ref position) - converts the binary representation back into the original type
            </summary>
        </member>
        <member name="T:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper">
            <summary>
            A bindable mapper wrapper for tree ensembles, that creates a bound mapper with three outputs:
            1. A vector containing the individual tree outputs of the tree ensemble.
            2. An indicator vector for the leaves that the feature vector falls on in the tree ensemble.
            3. An indicator vector for the internal nodes on the paths that the feature vector falls on in the tree ensemble.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.Arguments">
            <summary>
            In addition to options inherited from <see cref="T:Microsoft.ML.Data.ScorerArgumentsBase"/>,
            <see cref="T:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.Arguments"/> adds output columns' names of tree-based featurizer.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.Arguments.TreesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.TreesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.Arguments.LeavesColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.LeavesColumnName"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.Arguments.PathsColumnName">
            <summary>
            See <see cref="F:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase.PathsColumnName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper.FeatureColumn">
            <summary>
            Feature vector to be mapped to tree-based features.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._treesColumnName">
            <summary>
            The name of the column that stores the prediction values of all trees. Its type is a vector of <see cref="T:System.Single"/>
            and the i-th vector element is the prediction value predicted by the i-th tree.
            If <see cref="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._treesColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._leavesColumnName">
            <summary>
            The 0-1 encoding of all leaf nodes' IDs. Its type is a vector of <see cref="T:System.Single"/>. If the given feature
            vector falls into the first leaf of the first tree, the first element in the 0-1 encoding would be 1.
            If <see cref="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._leavesColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._pathsColumnName">
            <summary>
            The 0-1 encoding of the paths to the leaves. If the path to the first tree's leaf is node 1 (2nd node in the first tree),
            node 3 (4th node in the first tree), and node 5 (6th node in the first tree), the 2nd, 4th, and 6th element in that encoding
            would be 1.
            If <see cref="F:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper._pathsColumnName"/> is <see langword="null"/>, this output column may not be generated.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Data.TreeEnsembleFeaturizerBindableMapper.BoundMapper.GetDependenciesForNewColumns(System.Collections.Generic.IEnumerable{Microsoft.ML.DataViewSchema.Column})">
            <summary>
            Given a set of columns, return the input columns that are needed to generate those output columns.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Data.TreeEnsembleFeaturizerTransform">
            <member name="TreeEnsembleFeaturizerTransform">
      <summary>
        Trains a tree ensemble, or loads it from a file, then maps a numeric feature vector to outputs.
      </summary>
      <remarks>
        In machine learning it is a pretty common and powerful approach to utilize the already trained model in the process of defining features.
        <para>One such example would be the use of model's scores as features to downstream models. For example, we might run clustering on the original features, 
        and use the cluster distances as the new feature set.
        Instead of consuming the model's output, we could go deeper, and extract the 'intermediate outputs' that are used to produce the final score. </para>
        There are a number of famous or popular examples of this technique:
        <list type="bullet">
          <item><description>A deep neural net trained on the ImageNet dataset, with the last layer removed, is commonly used to compute the 'projection' of the image into the 'semantic feature space'.
            It is observed that the Euclidean distance in this space often correlates with the 'semantic similarity': that is, all pictures of pizza are located close together,
            and far away from pictures of kittens. </description></item>
          <item><description>A matrix factorization and/or LDA model is also often used to extract the 'latent topics' or 'latent features' associated with users and items.</description></item>
          <item><description>The weights of the linear model are often used as a crude indicator of 'feature importance'. At the very minimum, the 0-weight features are not needed by the model,
            and there's no reason to compute them. </description></item>
        </list>
        <para>
          Tree featurizer uses the decision tree ensembles for feature engineering in the same fashion as above.
          It trains a tree ensemble, or loads it from a file, then maps a numeric feature vector to three outputs:
        </para>
        <list type="number">
          <item><description>A vector containing the individual tree outputs of the tree ensemble.</description></item>
          <item><description>A vector indicating the leaves that the feature vector falls on in the tree ensemble.</description></item>
          <item><description>A vector indicating the paths that the feature vector falls on in the tree ensemble.</description></item>
        </list>
        If a both a model file and a trainer are specified - will use the model file. If neither are specified,
        will train a default FastTree model.
        This can handle key labels by training a regression model towards their optionally permuted indices.
        <para>Let's assume that we've built a tree ensemble of 100 trees with 100 leaves each (it doesn't matter whether boosting was used or not in training). 
        If we associate each leaf of each tree with a sequential integer, we can, for every incoming example x, 
        produce an indicator vector L(x), where Li(x) = 1 if the example x 'falls' into the leaf #i, and 0 otherwise.</para>
        <para>Thus, for every example x, we produce a 10000-valued vector L, with exactly 100 1s and the rest zeroes. 
        This 'leaf indicator' vector can be considered the ensemble-induced 'footprint' of the example.</para>
        <para>The 'distance' between two examples in the L-space is actually a Hamming distance, and is equal to the number of trees that do not distinguish the two examples.</para>
        <para>We could repeat the same thought process for the non-leaf, or internal, nodes of the trees (we know that each tree has exactly 99 of them in our 100-leaf example), 
        and produce another indicator vector, N (size 9900), for each example, indicating the 'trajectory' of each example through each of the trees.</para>
        <para>The distance in the combined 19900-dimensional LN-space will be equal to the number of 'decisions' in all trees that 'agree' on the given pair of examples.</para>
        <para>The TreeLeafFeaturizer is also producing the third vector, T, which is defined as Ti(x) = output of tree #i on example x.</para>
      </remarks>
      <example>
        <code language="csharp">
          pipeline.Add(new TreeLeafFeaturizer())
        </code>
      </example>
    </member>
        </member>
        <member name="T:Microsoft.ML.Data.TreeEnsembleFeaturizerTransform.ArgumentsForEntryPoint">
            <summary>
            REVIEW: Ideally we should have only one arguments class by using IComponentFactory for the model.
            For now it probably warrants a REVIEW comment here in case we'd like to merge these two arguments in the future.
            Also, it might be worthwhile to extract the common arguments to a base class.
            </summary>
        </member>
        <member name="T:Microsoft.ML.TreeExtensions">
            <summary>
            Collection of extension methods used by <see cref="T:Microsoft.ML.RegressionCatalog"/>, <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>,
            <see cref="T:Microsoft.ML.MulticlassClassificationCatalog"/>, <see cref="T:Microsoft.ML.RankingCatalog"/>, and <see cref="T:Microsoft.ML.TransformsCatalog"/>
            to create instances of decision tree trainers and featurizers.
            </summary>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/>, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Single"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <param name="learningRate">The learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTree.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> with advanced options, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTreeWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/>, which predicts a target using a decision tree binary classification model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Boolean"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <param name="learningRate">The learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeBinaryClassification](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/FastTree.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> with advanced options, which predicts a target using a decision tree binary classification model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeBinaryClassification](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/FastTreeWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/>, which ranks a series of inputs based on their relevancee, using a decision tree ranking model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RankingCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Single"/> or <see cref="T:Microsoft.ML.Data.KeyDataViewType"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="rowGroupColumnName">The name of the group column.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <param name="learningRate">The learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Ranking/FastTree.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTree(Microsoft.ML.RankingCatalog.RankingTrainers,Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer.Options)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> with advanced options, which ranks a series of inputs based on their relevance, using a decision tree ranking model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RankingCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTree](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Ranking/FastTreeWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/>, which predicts a target using generalized additive models (GAM).
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Boolean"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfIterations">The number of iterations to use in learning the features.</param>
            <param name="maximumBinCountPerFeature">The maximum number of bins to use to approximate features.</param>
            <param name="learningRate">The learning rate. GAMs work best with a small learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[Gam](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/Gam.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.GamBinaryTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.GamBinaryTrainer"/> using advanced options, which predicts a target using generalized additive models (GAM).
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[Gam](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/GamWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer"/>, which predicts a target using generalized additive models (GAM).
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Single"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfIterations">The number of iterations to use in learning the features.</param>
            <param name="maximumBinCountPerFeature">The maximum number of bins to use to approximate features.</param>
            <param name="learningRate">The learning rate. GAMs work best with a small learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[Gam](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/Gam.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.Gam(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.GamRegressionTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.GamRegressionTrainer"/> using advanced options, which predicts a target using generalized additive models (GAM).
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[Gam](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/GamWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/>, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Single"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <param name="learningRate">The learning rate.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeTweedie](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTreeTweedie.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastTreeTweedie(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> using advanced options, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastTreeTweedie](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTreeTweedieWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/>, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Single"/></param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/></param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastForestRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastForest.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.RegressionCatalog.RegressionTrainers,Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> with advanced options, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.RegressionCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastForestRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastForestWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/>, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="labelColumnName">The name of the label column. The column data must be <see cref="T:System.Boolean"/>.</param>
            <param name="featureColumnName">The name of the feature column. The column data must be a known-sized vector of <see cref="T:System.Single"/>.</param>
            <param name="exampleWeightColumnName">The name of the example weight column (optional).</param>
            <param name="numberOfTrees">Total number of decision trees to create in the ensemble.</param>
            <param name="numberOfLeaves">The maximum number of leaves per decision tree.</param>
            <param name="minimumExampleCountPerLeaf">The minimal number of data points required to form a new tree leaf.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastForestBinaryClassification](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/FastForest.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FastForest(Microsoft.ML.BinaryClassificationCatalog.BinaryClassificationTrainers,Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> with advanced options, which predicts a target using a decision tree regression model.
            </summary>
            <param name="catalog">The <see cref="T:Microsoft.ML.BinaryClassificationCatalog"/>.</param>
            <param name="options">Trainer options.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FastForestBinaryClassification](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/FastForestWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByPretrainTreeEnsemble(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>, which produces tree-based features given a <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/>.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByPretrainTreeEnsemble](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/PretrainedTreeEnsembleFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastForestRegression(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.PretrainedTreeFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestRegressionFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastTreeRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastForestRegressionFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeRegression(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRegressionFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastTreeRegression](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastTreeRegressionFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastForestBinary(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastForestBinaryFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastForestBinary](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastForestBinaryFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeBinary(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeBinaryFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastTreeBinary](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastTreeBinaryFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeRanking(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeRankingFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastTreeRanking](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastTreeRankingFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.TreeExtensions.FeaturizeByFastTreeTweedie(Microsoft.ML.TransformsCatalog,Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator.Options)">
            <summary>
            Create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator"/>, which uses <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieTrainer"/> to train <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters"/> to create tree-based features.
            </summary>
            <param name="catalog">The context <see cref="T:Microsoft.ML.TransformsCatalog"/> to create <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator"/>.</param>
            <param name="options">The options to configure <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator"/>. See <see cref="T:Microsoft.ML.Trainers.FastTree.FastTreeTweedieFeaturizationEstimator.Options"/> and
            <see cref="T:Microsoft.ML.Trainers.FastTree.TreeEnsembleFeaturizationEstimatorBase.OptionsBase"/> for available settings.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
            [!code-csharp[FeaturizeByFastTreeTweedie](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/TreeFeaturization/FastTreeTweedieFeaturizationWithOptions.cs)]
            ]]>
            </format>
            </example>
        </member>
        <member name="M:Microsoft.ML.FastTree.Utils.RegressionTreeBaseUtils.RegressionTreeEnsembleAsIDataView(Microsoft.ML.Runtime.IHost,System.Double,System.Collections.Generic.IReadOnlyList{System.Double},System.Collections.Generic.IReadOnlyList{Microsoft.ML.Trainers.FastTree.RegressionTreeBase})">
            <summary>
            Utility method used to represent a tree ensemble as an <see cref="T:Microsoft.ML.IDataView"/>.
            Every row in the <see cref="T:Microsoft.ML.IDataView"/> corresponds to a node in the tree ensemble. The columns are the fields for each node.
            The column TreeID specifies which tree the node belongs to. The <see cref="T:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree"/> gets
            special treatment since it has some additional fields (<see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSamplesAt(System.Int32)"/>
            and <see cref="M:Microsoft.ML.Trainers.FastTree.QuantileRegressionTree.GetLeafSampleWeightsAt(System.Int32)"/>).
            </summary>
        </member>
    </members>
</doc>
