<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ML.ImageAnalytics</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting an <see cref="T:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer.Columns">
            <summary>
            The input and output column pairs passed to this <see cref="T:Microsoft.ML.ITransformer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Converts the images to grayscale.
            </summary>
            <param name="env">The estimator's local <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="columns">The name of the columns containing the image paths(first item of the tuple), and the name of the resulting output column (second item of the tuple).</param>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator">
             <summary>
             <see cref="T:Microsoft.ML.IEstimator`1"/> for the <see cref="T:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer"/>.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | <xref:System.Drawing.Bitmap> |
             | Output column data type | <xref:System.Drawing.Bitmap> |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.ImageAnalytics |
             | Exportable to ONNX | No |
            
             The resulting <xref:Microsoft.ML.Transforms.Image.ImageGrayscalingTransformer> creates a new column, named as specified in the output column name parameters, and
             converts the image from the input column into a grayscale image.
             The images might be converted to grayscale to reduce the complexity of the model.
             The grayed out images contain less information to process than the colored images.
             Another use case for converting to grayscale is to generate new images out of the existing ones, so you can have a larger dataset,
             a technique known as [data augmentation](http://www.stat.harvard.edu/Faculty_Content/meng/JCGS01.pdf).
             For end-to-end image processing pipelines, and scenarios in your applications, see the
             [examples](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started) in the machinelearning-samples github repository.
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale(Microsoft.ML.TransformsCatalog,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Converts the images to grayscale.
            </summary>
            <param name="env">The estimator's local <see cref="T:Microsoft.ML.Runtime.IHostEnvironment"/>.</param>
            <param name="columns">The name of the columns containing the image paths(first item of the tuple), and the name of the resulting output column (second item of the tuple).</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape"/> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting an <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Columns">
            <summary>
            The columns passed to this <see cref="T:Microsoft.ML.ITransformer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
             Extract pixels values from image and produce array of values.
            </summary>
             <param name="env">The host environment.</param>
             <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
             <param name="inputColumnName">Name of column to transform. If set to <see langword="null"/>, the value of the <paramref name="outputColumnName"/> will be used as source.</param>
             <param name="colorsToExtract">What colors to extract.</param>
             <param name="orderOfExtraction">In which order to extract colors from pixel.</param>
             <param name="interleavePixelColors">Whether to interleave the pixels colors, meaning keep them in the <paramref name="orderOfExtraction"/> order, or leave them in the planner form:
             all the values for one color for all pixels, then all the values for another color and so on.</param>
             <param name="offsetImage">Offset each pixel's color value by this amount. Applied to color value first.</param>
             <param name="scaleImage">Scale each pixel's color value by this amount. Applied to color value second.</param>
             <param name="outputAsFloatArray">Output array as float array. If false, output as byte array and ignores <paramref name="offsetImage"/> and <paramref name="scaleImage"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions[])">
            <summary>
             Extract pixels values from image and produce array of values.
            </summary>
             <param name="env">The host environment.</param>
             <param name="columns">Describes the parameters of pixel extraction for each column pair.</param>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator">
             <summary>
             <see cref="T:Microsoft.ML.IEstimator`1"/> for the <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer"/>.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | <xref:System.Drawing.Bitmap> |
             | Output column data type | Known-sized vector of <xref:System.Single> or <xref:System.Byte> |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.ImageAnalytics |
             | Exportable to ONNX | No |
            
             The resulting <xref:Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer> creates a new column, named as specified in the output column name parameters, and
             converts image into vector of known size of floats or bytes. Size and data type depends on specified parameters.
             For end-to-end image processing pipelines, and scenarios in your applications, see the
             [examples](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started) in the machinelearning-samples github repository.
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)" />
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits">
            <summary>
            Which color channels are extracted. Note that these values are serialized so should not be modified.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions">
            <summary>
            Describes how the transformer handles one image pixel extraction column pair.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.Name">
            <summary>Name of the column resulting from the transformation of <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.InputColumnName"/>.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.InputColumnName">
            <summary>Name of column to transform.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.ColorsToExtract">
            <summary>The colors to extract.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.OrderOfExtraction">
            <summary>The order in which to extract color values from pixel.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.OffsetImage">
            <summary>Offset pixel's color value by this amount. Applied to color value first.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.ScaleImage">
            <summary>Scale pixel's color value by this amount. Applied to color value second.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.InterleavePixelColors">
            <summary>
            Whether to interleave the pixels colors, meaning keep them in the <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.OrderOfExtraction"/> order, or leave them in the planner form:
            all the values for one color for all pixels, then all the values for another color and so on.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.OutputAsFloatArray">
            <summary>Output array as float array. If false, output as byte array and ignores <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.OffsetImage"/> and <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.ScaleImage"/> .</summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.#ctor(System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Describes how the transformer handles one input-output column pair.
            </summary>
            <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
            <param name="inputColumnName">Name of column to transform. If set to <see langword="null"/>, the value of the <paramref name="name"/> will be used as source.</param>
            <param name="colorsToExtract">What colors to extract.</param>
            <param name="orderOfExtraction">In which order to extract colors from pixel.</param>
            <param name="interleavePixelColors">Whether to interleave the pixels, meaning keep them in the <paramref name="orderOfExtraction"/> order, or leave them in the planner form:
            all the values for one color for all pixels, then all the values for another color and so on.</param>
            <param name="offsetImage">Offset each pixel's color value by this amount. Applied to color value before <paramref name="scaleImage"/>.</param>
            <param name="scaleImage">Scale each pixel's color value by this amount. Applied to color value after <paramref name="offsetImage"/>.</param>
            <param name="outputAsFloatArray">Output array as float array. If false, output as byte array and ignores <paramref name="offsetImage"/> and <paramref name="scaleImage"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
             Extract pixels values from image and produce array of values.
            </summary>
             <param name="env">The host environment.</param>
             <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>. Null means <paramref name="inputColumnName"/> is replaced.</param>
             <param name="inputColumnName">Name of the input column.</param>
             <param name="colorsToExtract">What colors to extract.</param>
             <param name="orderOfExtraction">In which order to extract colors from pixel.</param>
             <param name="interleavePixelColors">Whether to interleave the pixels, meaning keep them in the <paramref name="orderOfExtraction"/> order, or leave them in the planner form:
             all the values for one color for all pixels, then all the values for another color and so on.</param>
             <param name="offsetImage">Offset each pixel's color value by this amount. Applied to color value before <paramref name="scaleImage"/>.</param>
             <param name="scaleImage">Scale each pixel's color value by this amount. Applied to color value after <paramref name="offsetImage"/>.</param>
             <param name="outputAsFloatArray">Output array as float array. If false, output as byte array.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions[])">
            <summary>
             Extract pixels values from image and produce array of values.
            </summary>
             <param name="env">The host environment.</param>
             <param name="columns">Describes the parameters of pixel extraction for each column pair.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape"/> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageResizingTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting an <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.ImageResizingTransformer.Columns">
            <summary>
            The columns passed to this <see cref="T:Microsoft.ML.ITransformer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)">
            <summary>
             Resize image.
            </summary>
             <param name="env">The host environment.</param>
             <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
             <param name="imageWidth">Width of resized image.</param>
             <param name="imageHeight">Height of resized image.</param>
             <param name="inputColumnName">Name of the input column.</param>
             <param name="resizing">What <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind"/> to use.</param>
             <param name="cropAnchor">If <paramref name="resizing"/> set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoCrop"/> what anchor to use for cropping.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions[])">
            <summary>
             Resize image.
            </summary>
             <param name="env">The host environment.</param>
             <param name="columns">Describes the parameters of image resizing for each column pair.</param>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator">
             <summary>
             <see cref="T:Microsoft.ML.IEstimator`1"/> for the <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingTransformer"/>.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | <xref:System.Drawing.Bitmap> |
             | Output column data type | <xref:System.Drawing.Bitmap> |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.ImageAnalytics |
             | Exportable to ONNX | No |
            
             The resulting <xref:Microsoft.ML.Transforms.Image.ImageResizingTransformer> creates a new column, named as specified in the output column name parameters, and
             resizes the data from the input column to this new column.
            
             In image processing pipelines, often machine learning practitioner make use of
             [pre-trained DNN featurizers](https://blogs.msdn.microsoft.com/mlserver/2017/04/12/image-featurization-with-a-pre-trained-deep-neural-network-model) to extract features for usage in the machine learning algorithms.
             Those pre-trained models have a defined width and height for their input images, so often, after getting loaded, the images will need to get resized before
             further processing.
             For end-to-end image processing pipelines, and scenarios in your applications, see the
             [examples](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started) in the machinelearning-samples github repository.
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)"/>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind">
            <summary>
            Specifies how to resize the images: by croping them or padding in the direction needed to fill up.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoPad">
            <summary>
            Isotropic(uniform) with padding.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoCrop">
            <summary>
            Isotropic(uniform) with cropping.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.Fill">
            <summary>
            Ignore aspect ratio and squeeze/stretch into target dimensions.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor">
            <summary>
            Indicates where to anchor for image cropping, for example set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor.Center"/> is going to crop the image on all sides,
            set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor.Bottom"/> is going to crop the image at the top.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions">
            <summary>
            Describes how the transformer handles one image resize column.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.Name">
            <summary>Name of the column resulting from the transformation of <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.InputColumnName"/></summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.InputColumnName">
            <summary>Name of column to transform.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.ImageWidth">
            <summary>Width to resize the image to.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.ImageHeight">
            <summary>Height to resize the image to.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.Resizing">
            <summary>What <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind"/> to use (uniform, or non-uniform).</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.Anchor">
            <summary>If <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.Resizing"/> set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoCrop"/> what anchor to use for cropping.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.Type">
            <summary>The type of column, <see cref="T:Microsoft.ML.Data.DataViewType"/>.</summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions.#ctor(System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)">
            <summary>
            Describes how the transformer handles one image resize column pair.
            </summary>
            <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
            <param name="imageWidth">Width of resized image.</param>
            <param name="imageHeight">Height of resized image.</param>
            <param name="inputColumnName">Name of column to transform. If set to <see langword="null"/>, the value of the <paramref name="name"/> will be used as source.</param>
            <param name="resizing">What <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind"/> to use.</param>
            <param name="anchor">If <paramref name="resizing"/> set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoCrop"/> what anchor to use for cropping.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)">
            <summary>
            Estimator which resizes images.
            </summary>
            <param name="env">The host environment.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
            <param name="imageWidth">Width of resized image.</param>
            <param name="imageHeight">Height of resized image.</param>
            <param name="inputColumnName">Name of the input column.</param>
            <param name="resizing">What <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind"/> to use.</param>
            <param name="cropAnchor">If <paramref name="resizing"/> set to <see cref="F:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.IsoCrop"/> what anchor to use for cropping.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions[])">
            <summary>
            Estimator which resizes images.
            </summary>
            <param name="env">The host environment.</param>
            <param name="columns">Describes the parameters of image resizing for each column pair.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageResizingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape"/> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.ImageTypeAttribute">
            <summary>
            Allows a member to be marked as a <see cref="T:Microsoft.ML.Transforms.Image.ImageDataViewType"/>, primarily allowing one to set
            the shape of an image field.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.ImageTypeAttribute.Height">
            <summary>
            The height of the image type.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.ImageTypeAttribute.Width">
            <summary>
            The width of the image type.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageTypeAttribute.#ctor">
            <summary>
            Create an image type without knowing its height and width.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageTypeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            Create an image type with known height and width.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageTypeAttribute.Equals(Microsoft.ML.Data.DataViewTypeAttribute)">
            <summary>
            Images with the same width and height should equal.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.ImageTypeAttribute.GetHashCode">
            <summary>
            Produce the same hash code for all images with the same height and the same width.
            </summary>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting a <see cref="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator"/>.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer.Columns">
            <summary>
            The columns passed to this <see cref="T:Microsoft.ML.ITransformer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <param name="env">The host environment.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
            <param name="imageHeight">The height of the output images.</param>
            <param name="imageWidth">The width of the output images.</param>
            <param name="inputColumnName">Name of column to transform. If set to <see langword="null"/>, the value of the <paramref name="outputColumnName"/> will be used as source.</param>
            <param name="colorsPresent">Specifies which <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits"/> are in present the input pixel vectors. The order of colors is specified in <paramref name="orderOfColors"/>.</param>
            <param name="orderOfColors">The order in which colors are presented in the input vector.</param>
            <param name="interleavedColors">Whether the pixels are interleaved, meaning whether they are in <paramref name="orderOfColors"/> order, or separated in the planar form, where the colors are specified one by one
            for all the pixels of the image. </param>
            <param name="scaleImage">Scale each pixel's color value by this amount.</param>
            <param name="offsetImage">Offset each pixel's color value by this amount.</param>
            <param name="defaultAlpha">Default value for alpha color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Alpha"/>.</param>
            <param name="defaultRed">Default value for red color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Red"/>.</param>
            <param name="defaultGreen">Default value for green color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Green"/>.</param>
            <param name="defaultBlue">Default value for blue color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Blue"/>.</param>
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator">
             <summary>
             <see cref="T:Microsoft.ML.IEstimator`1"/> for the <see cref="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer"/>.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | Known-sized vector of <xref:System.Single>, <xref:System.Double> or <xref:System.Byte>. |
             | Output column data type | <xref:System.Drawing.Bitmap> |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.ImageAnalytics |
             | Exportable to ONNX | No |
            
             The resulting <xref:Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer> creates a new column, named as specified in the output column name parameters, and
             creates image from the data in the input column to this new column.
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToImage(Microsoft.ML.TransformsCatalog,System.Int32,System.Int32,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </member>
        <member name="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions">
            <summary>
            Describes how the transformer handles one vector to image conversion column pair.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions.Name">
            <summary>Name of the column resulting from the transformation of <see cref="F:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions.InputColumnName"/>.</summary>
        </member>
        <member name="F:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions.InputColumnName">
            <summary> Name of column to transform.</summary>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions.#ctor(System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <param name="name">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.</param>
            <param name="imageHeight">The height of the output images.</param>
            <param name="imageWidth">The width of the output images.</param>
            <param name="inputColumnName">Name of column to transform. If set to <see langword="null"/>, the value of the <paramref name="name"/> will be used as source.</param>
            <param name="colorsPresent">Specifies which <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits"/> are present in the input pixel vectors. The order of colors is specified in <paramref name="orderOfColors"/>.</param>
            <param name="orderOfColors">The order in which colors are presented in the input vector.</param>
            <param name="interleavedColors">Whether the pixels are interleaved, meaning whether they are in <paramref name="orderOfColors"/> order, or separated in the planar form, where the colors are specified one by one
            alpha, red, green, blue for all the pixels of the image. </param>
            <param name="scaleImage">The values are scaled by this value before being converted to pixels. Applied to vector value before <paramref name="offsetImage"/></param>
            <param name="offsetImage">The offset is subtracted before converting the values to pixels. Applied to vector value after <paramref name="scaleImage"/>.</param>
            <param name="defaultAlpha">Default value for alpha color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Alpha"/>.</param>
            <param name="defaultRed">Default value for red color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Red"/>.</param>
            <param name="defaultGreen">Default value for green color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Green"/>.</param>
            <param name="defaultBlue">Default value for blue color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Blue"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.Int32,System.Int32,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Convert pixels values into an image.
            </summary>
             <param name="env">The host environment.</param>
             <param name="imageHeight">The height of the output images.</param>
             <param name="imageWidth">The width of the output images.</param>
             <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>. Null means <paramref name="inputColumnName"/> is replaced.</param>
             <param name="inputColumnName">Name of the input column.</param>
             <param name="colorsPresent">Specifies which <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits"/> are in present the input pixel vectors. The order of colors is specified in <paramref name="orderOfColors"/>.</param>
             <param name="orderOfColors">The order in which colors are presented in the input vector.</param>
             <param name="interleavedColors">Whether the pixels are interleaved, meaning whether they are in <paramref name="orderOfColors"/> order, or separated in the planar form, where the colors are specified one by one
             alpha, red, green, blue for all the pixels of the image. </param>
             <param name="scaleImage">The values are scaled by this value before being converted to pixels. Applied to vector value before <paramref name="offsetImage"/>.</param>
             <param name="offsetImage">The offset is subtracted before converting the values to pixels. Applied to vector value after <paramref name="scaleImage"/>.</param>
             <param name="defaultAlpha">Default value for alpha color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Alpha"/>.</param>
             <param name="defaultRed">Default value for red color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Red"/>.</param>
             <param name="defaultGreen">Default value for green color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Green"/>.</param>
             <param name="defaultBlue">Default value for blue color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Blue"/>.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions[])">
            <summary>
             Extract pixels values from image and produce array of values.
            </summary>
             <param name="env">The host environment.</param>
             <param name="columnOptions">The <see cref="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions"/> describing how the transform handles each vector to image conversion column pair.</param>
        </member>
        <member name="M:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape"/> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.ML.ImageEstimatorsCatalog">
            <summary>
            Collection of extension methods for <see cref="T:Microsoft.ML.TransformsCatalog"/> to create instances of image processing transformer components.
            </summary>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale(Microsoft.ML.TransformsCatalog,System.String,System.String)">
            <summary>
             Create a <see cref="T:Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator"/>, which converts images in the column specified in <see cref="P:Microsoft.ML.InputOutputColumnPair.InputColumnName"/>
             to grayscale images in a new column:  <see cref="P:Microsoft.ML.InputOutputColumnPair.OutputColumnName" />.
            </summary>
             <param name="catalog">The transform's catalog.</param>
             <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
             This column's data type will be the same as that of the input column.</param>
             <param name="inputColumnName">Name of the column to convert images to grayscale from.
             This estimator operates only on <see cref="T:System.Drawing.Bitmap"/>.</param>
             <example>
             <format type="text/markdown">
             <![CDATA[
              [!code-csharp[ConvertToGrayscale](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ConvertToGrayscale.cs)]
              [!code-csharp[ConvertToGrayscale](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ConvertToGrayScaleInMemory.cs)]
             ]]></format>
             </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToGrayscale(Microsoft.ML.TransformsCatalog,Microsoft.ML.InputOutputColumnPair[])">
            <summary>
             Create a <see cref="T:Microsoft.ML.Transforms.Image.ImageGrayscalingEstimator"/>, which converts images in the column specified in <see cref="P:Microsoft.ML.InputOutputColumnPair.InputColumnName"/>
             to grayscale images in a new column: <see cref="P:Microsoft.ML.InputOutputColumnPair.OutputColumnName" />.
            </summary>
             <param name="catalog">The transform's catalog.</param>
             <param name="columns">The pairs of input and output columns. This estimator operates only on <see cref="T:System.Drawing.Bitmap"/>.</param>
             <example>
             <format type="text/markdown">
             <![CDATA[
              [!code-csharp[ConvertToGrayscale](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ConvertToGrayscale.cs)]
             ]]></format>
             </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.LoadImages(Microsoft.ML.TransformsCatalog,System.String,System.String,System.String)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Data.ImageLoadingEstimator"/>, which loads the data from the column specified in <paramref name="inputColumnName"/>
            as an image to a new column: <paramref name="outputColumnName"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
            This column's data type will be <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="inputColumnName">Name of the column with paths to the images to load.
            This estimator operates over text data.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[LoadImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/LoadImages.cs)]
            ]]></format>
            </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.LoadRawImageBytes(Microsoft.ML.TransformsCatalog,System.String,System.String,System.String)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Data.ImageLoadingEstimator"/>, which loads the data from the column specified in <paramref name="inputColumnName"/>
            as an image of raw bytes to a new column: <paramref name="outputColumnName"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
            This column's data type will be <see cref="T:Microsoft.ML.Data.VectorDataViewType"/>.</param>
            <param name="inputColumnName">Name of the column with paths to the images to load.
            This estimator operates over text data.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[ImageClassification](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/MulticlassClassification/ImageClassification/ImageClassificationDefault.cs)]
            ]]></format>
            </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Boolean)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator"/>, which extracts pixels values from the data specified in column: <paramref name="inputColumnName"/>
            to a new column: <paramref name="outputColumnName"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
            This column's data type will be a known-sized vector of <see cref="T:System.Single"/> or <see cref="T:System.Byte"/> depending on <paramref name="outputAsFloatArray"/>.</param>
            <param name="inputColumnName">Name of the column with images.
            This estimator operates over <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="colorsToExtract">The colors to extract from the image.</param>
            <param name="orderOfExtraction">The order in which to extract colors from pixel.</param>
            <param name="interleavePixelColors">Whether to interleave the pixels colors, meaning keep them in the <paramref name="orderOfExtraction"/> order, or leave them in the planner form:
            all the values for one color for all pixels, then all the values for another color, and so on.</param>
            <param name="offsetImage">Offset each pixel's color value by this amount. Applied to color value before <paramref name="scaleImage"/>.</param>
            <param name="scaleImage">Scale each pixel's color value by this amount. Applied to color value after <paramref name="offsetImage"/>.</param>
            <param name="outputAsFloatArray">Output array as float array. If false, output as byte array and ignores <paramref name="offsetImage"/> and <paramref name="scaleImage"/>.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[ExtractPixels](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ExtractPixels.cs)]
             [!code-csharp[ApplyOnnxModel](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ApplyONNXModelWithInMemoryImages.cs)]
            ]]></format>
            </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ExtractPixels(Microsoft.ML.TransformsCatalog,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions[])">
            <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator"/>, which extracts pixel values from the data specified in column: <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.InputColumnName"/>
            to a new column: <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions.Name"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="columnOptions">The <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColumnOptions"/> describing how the transform handles each image pixel extraction output input column pair.</param>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,System.String,System.Int32,System.Int32,System.String,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind,Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator"/>, which resize the image from the column specified in <paramref name="inputColumnName"/>
            to a new column: <paramref name="outputColumnName"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
            This column's data type will be the same as that of the input column.</param>
            <param name="inputColumnName">Name of the column with images.
            This estimator operates over <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="imageWidth">The transformed image width.</param>
            <param name="imageHeight">The transformed image height.</param>
            <param name="resizing"> The type of image resizing as specified in <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind"/>.</param>
            <param name="cropAnchor">Where to place the anchor, to start cropping. Options defined in <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor"/></param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[ResizeImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ResizeImages.cs)]
            ]]></format>
            </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ResizeImages(Microsoft.ML.TransformsCatalog,Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions[])">
            <summary>
            Resizes the images to a new width and height.
            </summary>
            <remarks>
            In image processing pipelines, often machine learning practitioner make use of<a href= "https://blogs.msdn.microsoft.com/mlserver/2017/04/12/image-featurization-with-a-pre-trained-deep-neural-network-model/">
            pre - trained DNN featurizers</a> to extract features for usage in the machine learning algorithms.
            Those pre-trained models have a defined width and height for their input images, so often, after getting loaded, the images will need to get resized before
            further processing.
            The new width and height, as well as other properties of resizing, like type of scaling (uniform, or non-uniform), and whether to pad the image,
            or just crop it can be specified separately for each column loaded, through the <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions"/>.
            </remarks >
            <param name="catalog">The transform's catalog.</param>
            <param name="columnOptions">The <see cref="T:Microsoft.ML.Transforms.Image.ImageResizingEstimator.ColumnOptions"/> describing how the transform handles each image resize column.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[ResizeImages](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ResizeImages.cs)]
            ]]></format>
            </example>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToImage(Microsoft.ML.TransformsCatalog,Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions[])">
            <summary>
            Converts vectors of pixels into <see cref="T:Microsoft.ML.Transforms.Image.ImageDataViewType"/> representation.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="columnOptions">The <see cref="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator.ColumnOptions"/> describing how the transform handles each vector to image conversion column pair.</param>
        </member>
        <member name="M:Microsoft.ML.ImageEstimatorsCatalog.ConvertToImage(Microsoft.ML.TransformsCatalog,System.Int32,System.Int32,System.String,System.String,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits,Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder,System.Boolean,System.Single,System.Single,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a <see cref="T:Microsoft.ML.Transforms.Image.VectorToImageConvertingEstimator"/>, which creates image from the data from the column specified in <paramref name="inputColumnName"/>
            to a new column: <paramref name="outputColumnName"/>.
            </summary>
            <param name="catalog">The transform's catalog.</param>
            <param name="imageHeight">The height of the output images.</param>
            <param name="imageWidth">The width of the output images.</param>
            <param name="outputColumnName">Name of the column resulting from the transformation of <paramref name="inputColumnName"/>.
            This column's data type will be <see cref="T:System.Drawing.Bitmap"/>.</param>
            <param name="inputColumnName">Name of the column with data to be converted to image.
            This estimator operates over known-sized vector of <see cref="T:System.Single"/>, <see cref="T:System.Double"/> and <see cref="T:System.Byte"/>.</param>
            <param name="colorsPresent">Specifies which <see cref="T:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits"/> are in present the input pixel vectors. The order of colors is specified in <paramref name="orderOfColors"/>.</param>
            <param name="orderOfColors">The order in which colors are presented in the input vector.</param>
            <param name="interleavedColors">Whether the pixels are interleaved, meaning whether they are in <paramref name="orderOfColors"/> order, or separated in the planar form:
            all the values for one color for all pixels, then all the values for another color and so on.</param>
            <param name="scaleImage">The values are scaled by this value before being converted to pixels. Applied to vector value before <paramref name="offsetImage"/>.</param>
            <param name="offsetImage">The offset is subtracted before converting the values to pixels. Applied to vector value after <paramref name="scaleImage"/>.</param>
            <param name="defaultAlpha">Default value for alpha color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Alpha"/>.</param>
            <param name="defaultRed">Default value for red color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Red"/>.</param>
            <param name="defaultGreen">Default value for green color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Green"/>.</param>
            <param name="defaultBlue">Default value for blue color, would be overridden if <paramref name="colorsPresent"/> contains <see cref="F:Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.Blue"/>.</param>
            <example>
            <format type="text/markdown">
            <![CDATA[
             [!code-csharp[ConvertToImage](~/../docs/samples/docs/samples/Microsoft.ML.Samples/Dynamic/Transforms/ImageAnalytics/ConvertToImage.cs)]
            ]]></format>
            </example>
        </member>
        <member name="T:Microsoft.ML.Data.ImageLoadingTransformer">
            <summary>
            <see cref="T:Microsoft.ML.ITransformer"/> resulting from fitting a <see cref="T:Microsoft.ML.Data.ImageLoadingEstimator"/>.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.ImageLoadingTransformer.ImageFolder">
            <summary>
            The folder to load the images from.
            </summary>
        </member>
        <member name="F:Microsoft.ML.Data.ImageLoadingTransformer._useImageType">
            <summary>
            The flag for DataViewType for the image. If Type true, it is a VectorDataView of bytes else it is an ImageDataView type.
            If no options are specified, it defaults to false for ImageDataView type.
            </summary>
        </member>
        <member name="P:Microsoft.ML.Data.ImageLoadingTransformer.Columns">
            <summary>
            The columns passed to this <see cref="T:Microsoft.ML.ITransformer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.ML.Data.ImageLoadingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Data.ImageLoadingTransformer"/>.
            </summary>
            <param name="env">The host environment.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <param name="columns">Names of input and output columns.</param>
        </member>
        <member name="M:Microsoft.ML.Data.ImageLoadingTransformer.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Boolean,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.ML.Data.ImageLoadingTransformer"/>.
            </summary>
            <param name="env">The host environment.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <param name="type">Image type flag - true for ImageDataViewType or false for VectorDataViewType. Defaults to true i.e. ImageDataViewType if not specified.</param>
            <param name="columns">Names of input and output columns.</param>
        </member>
        <member name="T:Microsoft.ML.Data.ImageLoadingEstimator">
             <summary>
             <see cref="T:Microsoft.ML.IEstimator`1"/> for the <see cref="T:Microsoft.ML.Data.ImageLoadingTransformer"/>.
             </summary>
             <remarks>
             <format type="text/markdown"><![CDATA[
            
             ###  Estimator Characteristics
             |  |  |
             | -- | -- |
             | Does this estimator need to look at the data to train its parameters? | No |
             | Input column data type | [Text](<xref:Microsoft.ML.Data.TextDataViewType>) |
             | Output column data type | <xref:System.Drawing.Bitmap> |
             | Required NuGet in addition to Microsoft.ML | Microsoft.ML.ImageAnalytics |
             | Exportable to ONNX | No |
            
             The resulting <xref:Microsoft.ML.Data.ImageLoadingTransformer> creates a new column, named as specified in the output column name parameters, and
             loads in it images specified in the input column.
             Loading is the first step of almost every pipeline that does image processing, and further analysis on images.
             The images to load need to be in the formats supported by <xref:System.Drawing.Bitmap>.
             For end-to-end image processing pipelines, and scenarios in your applications, see the
             [examples](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started) in the machinelearning-samples github repository.</a>
            
             Check the See Also section for links to usage examples.
             ]]>
             </format>
             </remarks>
             <seealso cref="M:Microsoft.ML.ImageEstimatorsCatalog.LoadImages(Microsoft.ML.TransformsCatalog,System.String,System.String,System.String)" />
        </member>
        <member name="M:Microsoft.ML.Data.ImageLoadingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Load images in memory.
            </summary>
            <param name="env">The host environment.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <param name="columns">Names of input and output columns.</param>
        </member>
        <member name="M:Microsoft.ML.Data.ImageLoadingEstimator.#ctor(Microsoft.ML.Runtime.IHostEnvironment,System.String,System.Boolean,System.ValueTuple{System.String,System.String}[])">
            <summary>
            Load images in memory.
            </summary>
            <param name="env">The host environment.</param>
            <param name="imageFolder">Folder where to look for images.</param>
            <param name="type">Image type flag - true for  ImageDataViewType or false for VectorDataView. Defaults to true i.e ImageDataViewType if not specified.</param>
            <param name="columns">Names of input and output columns.</param>
        </member>
        <member name="M:Microsoft.ML.Data.ImageLoadingEstimator.GetOutputSchema(Microsoft.ML.SchemaShape)">
            <summary>
            Returns the <see cref="T:Microsoft.ML.SchemaShape"/> of the schema which will be produced by the transformer.
            Used for schema propagation and verification in a pipeline.
            </summary>
        </member>
    </members>
</doc>
